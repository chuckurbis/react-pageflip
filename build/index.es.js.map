{"version":3,"file":"index.es.js","sources":["../src/vendor/page-flip/Page/Page.ts","../src/vendor/page-flip/Page/ImagePage.ts","../src/vendor/page-flip/Collection/PageCollection.ts","../src/vendor/page-flip/Collection/ImagePageCollection.ts","../src/vendor/page-flip/Helper.ts","../src/vendor/page-flip/Page/HTMLPage.ts","../src/vendor/page-flip/Collection/HTMLPageCollection.ts","../src/vendor/page-flip/Flip/FlipCalculation.ts","../src/vendor/page-flip/Flip/Flip.ts","../src/vendor/page-flip/Render/Render.ts","../src/vendor/page-flip/Render/CanvasRender.ts","../src/vendor/page-flip/UI/UI.ts","../src/vendor/page-flip/UI/HTMLUI.ts","../src/vendor/page-flip/UI/CanvasUI.ts","../src/vendor/page-flip/Event/EventObject.ts","../src/vendor/page-flip/Render/HTMLRender.ts","../src/vendor/page-flip/Settings.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/vendor/page-flip/PageFlip.ts","../src/html-flip-book/index.tsx"],"sourcesContent":["import { Render } from '../Render/Render';\nimport { Point } from '../BasicTypes';\n\n/**\n * State of the page on the basis of which rendering\n */\nexport interface PageState {\n    /** Page rotation angle */\n    angle: number;\n\n    /** Page scope */\n    area: Point[];\n\n    /** Page position */\n    position: Point;\n\n    /** Rotate angle for hard pages */\n    hardAngle: number;\n\n    /** Rotate angle for hard pages at renedering time */\n    hardDrawingAngle: number;\n}\n\nexport const enum PageOrientation {\n    /** Left side page */\n    LEFT,\n\n    /** Right side page */\n    RIGHT,\n}\n\nexport const enum PageDensity {\n    SOFT = 'soft',\n    HARD = 'hard',\n}\n\n/**\n * Class representing a book page\n */\nexport abstract class Page {\n    /** State of the page on the basis of which rendering */\n    protected state: PageState;\n    /** Render object */\n    protected render: Render;\n\n    /** Page Orientation */\n    protected orientation: PageOrientation;\n\n    /** Density at creation */\n    protected createdDensity: PageDensity;\n    /** Density at the time of rendering (Depends on neighboring pages) */\n    protected nowDrawingDensity: PageDensity;\n\n    protected constructor(render: Render, density: PageDensity) {\n        this.state = {\n            angle: 0,\n            area: [],\n            position: { x: 0, y: 0 },\n            hardAngle: 0,\n            hardDrawingAngle: 0,\n        };\n\n        this.createdDensity = density;\n        this.nowDrawingDensity = this.createdDensity;\n\n        this.render = render;\n    }\n\n    /**\n     * Render static page\n     * \n     * @param {PageOrientation} orient - Static page orientation\n     */\n    public abstract simpleDraw(orient: PageOrientation): void;\n\n    /**\n     * Render dynamic page, using state\n     * \n     * @param {PageDensity} tempDensity - Density at the time of rendering \n     */\n    public abstract draw(tempDensity?: PageDensity): void;\n\n    /**\n     * Page loading\n     */\n    public abstract load(): void;\n\n    /**\n     * Set a constant page density\n     * \n     * @param {PageDensity} density \n     */\n    public setDensity(density: PageDensity): void {\n        this.createdDensity = density;\n        this.nowDrawingDensity = density;\n    }\n\n    /**\n     * Set temp page density to next render\n     * \n     * @param {PageDensity}  density \n     */\n    public setDrawingDensity(density: PageDensity): void {\n        this.nowDrawingDensity = density;\n    }\n\n    /**\n     * Set page position\n     * \n     * @param {Point} pagePos \n     */\n    public setPosition(pagePos: Point): void {\n        this.state.position = pagePos;\n    }\n\n    /**\n     * Set page angle\n     * \n     * @param {number} angle \n     */\n    public setAngle(angle: number): void {\n        this.state.angle = angle;\n    }\n\n    /**\n     * Set page crop area\n     * \n     * @param {Point[]} area \n     */\n    public setArea(area: Point[]): void {\n        this.state.area = area;\n    }\n\n    /**\n     * Rotate angle for hard pages to next render\n     * \n     * @param {number} angle \n     */\n    public setHardDrawingAngle(angle: number): void {\n        this.state.hardDrawingAngle = angle;\n    }\n\n    /**\n     * Rotate angle for hard pages\n     * \n     * @param {number} angle \n     */\n    public setHardAngle(angle: number): void {\n        this.state.hardAngle = angle;\n        this.state.hardDrawingAngle = angle;\n    }\n\n    /**\n     * Set page orientation\n     * \n     * @param {PageOrientation} orientation \n     */\n    public setOrientation(orientation: PageOrientation): void {\n        this.orientation = orientation;\n    }\n\n    /**\n     * Get temp page density\n     */\n    public getDrawingDensity(): PageDensity {\n        return this.nowDrawingDensity;\n    }\n\n    /**\n     * Get a constant page density\n     */\n    public getDensity(): PageDensity {\n        return this.createdDensity;\n    }\n    \n    /**\n     * Get rotate angle for hard pages\n     */\n    public getHardAngle(): number {\n        return this.state.hardAngle;\n    }\n\n    public abstract newTemporaryCopy(): Page;\n    public abstract getTemporaryCopy(): Page;\n    public abstract hideTemporaryCopy(): void;\n}\n","import { CanvasRender } from '../Render/CanvasRender';\nimport { Page, PageDensity, PageOrientation } from './Page';\nimport { Render } from '../Render/Render';\nimport { Point } from '../BasicTypes';\n\n/**\n * Class representing a book page as an image on Canvas\n */\nexport class ImagePage extends Page {\n    private readonly image: HTMLImageElement = null;\n    private isLoad = false;\n\n    private loadingAngle = 0;\n\n    constructor(render: Render, href: string, density: PageDensity) {\n        super(render, density);\n\n        this.image = new Image();\n        this.image.src = href;\n    }\n\n    public draw(tempDensity?: PageDensity): void {\n        const ctx = (this.render as CanvasRender).getContext();\n\n        const pagePos = this.render.convertToGlobal(this.state.position);\n        const pageWidth = this.render.getRect().pageWidth;\n        const pageHeight = this.render.getRect().height;\n\n        ctx.save();\n        ctx.translate(pagePos.x, pagePos.y);\n        ctx.beginPath();\n\n        for (let p of this.state.area) {\n            if (p !== null) {\n                p = this.render.convertToGlobal(p);\n                ctx.lineTo(p.x - pagePos.x, p.y - pagePos.y);\n            }\n        }\n\n        ctx.rotate(this.state.angle);\n\n        ctx.clip();\n\n        if (!this.isLoad) {\n            this.drawLoader(ctx, { x: 0, y: 0 }, pageWidth, pageHeight);\n        } else {\n            ctx.drawImage(this.image, 0, 0, pageWidth, pageHeight);\n        }\n\n        ctx.restore();\n    }\n\n    public simpleDraw(orient: PageOrientation): void {\n        const rect = this.render.getRect();\n        const ctx = (this.render as CanvasRender).getContext();\n\n        const pageWidth = rect.pageWidth;\n        const pageHeight = rect.height;\n\n        const x = orient === PageOrientation.RIGHT ? rect.left + rect.pageWidth : rect.left;\n\n        const y = rect.top;\n\n        if (!this.isLoad) {\n            this.drawLoader(ctx, { x, y }, pageWidth, pageHeight);\n        } else {\n            ctx.drawImage(this.image, x, y, pageWidth, pageHeight);\n        }\n    }\n\n    private drawLoader(\n        ctx: CanvasRenderingContext2D,\n        shiftPos: Point,\n        pageWidth: number,\n        pageHeight: number\n    ): void {\n        ctx.beginPath();\n        ctx.strokeStyle = 'rgb(200, 200, 200)';\n        ctx.fillStyle = 'rgb(255, 255, 255)';\n        ctx.lineWidth = 1;\n        ctx.rect(shiftPos.x + 1, shiftPos.y + 1, pageWidth - 1, pageHeight - 1);\n        ctx.stroke();\n        ctx.fill();\n\n        const middlePoint: Point = {\n            x: shiftPos.x + pageWidth / 2,\n            y: shiftPos.y + pageHeight / 2,\n        };\n\n        ctx.beginPath();\n        ctx.lineWidth = 10;\n        ctx.arc(\n            middlePoint.x,\n            middlePoint.y,\n            20,\n            this.loadingAngle,\n            (3 * Math.PI) / 2 + this.loadingAngle\n        );\n        ctx.stroke();\n        ctx.closePath();\n\n        this.loadingAngle += 0.07;\n        if (this.loadingAngle >= 2 * Math.PI) {\n            this.loadingAngle = 0;\n        }\n    }\n\n    public load(): void {\n        if (!this.isLoad)\n            this.image.onload = (): void => {\n                this.isLoad = true;\n            };\n    }\n\n    public newTemporaryCopy(): Page {\n        return this;\n    }\n\n    public getTemporaryCopy(): Page {\n        return this;\n    }\n\n    public hideTemporaryCopy(): void {\n        return;\n    }\n}\n","import { Orientation, Render } from '../Render/Render';\nimport { Page, PageDensity } from '../Page/Page';\nimport { PageFlip } from '../PageFlip';\nimport { FlipDirection } from '../Flip/Flip';\n\ntype NumberArray = number[];\n\n/**\n * Ð¡lass representing a collection of pages\n */\nexport abstract class PageCollection {\n    protected readonly app: PageFlip;\n    protected readonly render: Render;\n    protected readonly isShowCover: boolean;\n\n    /** Pages List */\n    protected pages: Page[] = [];\n    /** Index of the current page in list */\n    protected currentPageIndex = 0;\n\n    /** Number of the current spread in book */\n    protected currentSpreadIndex = 0;\n    /**  Two-page spread in landscape mode */\n    protected landscapeSpread: NumberArray[] = [];\n    /**  One-page spread in portrait mode */\n    protected portraitSpread: NumberArray[] = [];\n\n    protected constructor(app: PageFlip, render: Render) {\n        this.render = render;\n        this.app = app;\n\n        this.currentPageIndex = 0;\n        this.isShowCover = this.app.getSettings().showCover;\n    }\n\n    /**\n     * Load pages\n     */\n    public abstract load(): void;\n\n    /**\n     * Clear pages list\n     */\n    public destroy(): void {\n        this.pages = [];\n    }\n\n    /**\n     * Split the book on the two-page spread in landscape mode and one-page spread in portrait mode\n     */\n    protected createSpread(): void {\n        this.landscapeSpread = [];\n        this.portraitSpread = [];\n\n        for (let i = 0; i < this.pages.length; i++) {\n            this.portraitSpread.push([i]); // In portrait mode - (one spread = one page)\n        }\n\n        let start = 0;\n        if (this.isShowCover) {\n            this.pages[0].setDensity(PageDensity.HARD);\n            this.landscapeSpread.push([start]);\n            start++;\n        }\n\n        for (let i = start; i < this.pages.length; i += 2) {\n            if (i < this.pages.length - 1) this.landscapeSpread.push([i, i + 1]);\n            else {\n                this.landscapeSpread.push([i]);\n                this.pages[i].setDensity(PageDensity.HARD);\n            }\n        }\n    }\n\n    /**\n     * Get spread by mode (portrait or landscape)\n     */\n    protected getSpread(): NumberArray[] {\n        return this.render.getOrientation() === Orientation.LANDSCAPE\n            ? this.landscapeSpread\n            : this.portraitSpread;\n    }\n\n    /**\n     * Get spread index by page number\n     *\n     * @param {number} pageNum - page index\n     */\n    public getSpreadIndexByPage(pageNum: number): number {\n        const spread = this.getSpread();\n\n        for (let i = 0; i < spread.length; i++)\n            if (pageNum === spread[i][0] || pageNum === spread[i][1]) return i;\n\n        return null;\n    }\n\n    /**\n     * Get the total number of pages\n     */\n    public getPageCount(): number {\n        return this.pages.length;\n    }\n\n    /**\n     * Get the pages list\n     */\n    public getPages(): Page[] {\n        return this.pages;\n    }\n\n    /**\n     * Get page by index\n     *\n     * @param {number} pageIndex\n     */\n    public getPage(pageIndex: number): Page {\n        if (pageIndex >= 0 && pageIndex < this.pages.length) {\n            return this.pages[pageIndex];\n        }\n\n        throw new Error('Invalid page number');\n    }\n\n    /**\n     * Get the next page from the specified\n     *\n     * @param {Page} current\n     */\n    public nextBy(current: Page): Page {\n        const idx = this.pages.indexOf(current);\n\n        if (idx < this.pages.length - 1) return this.pages[idx + 1];\n\n        return null;\n    }\n\n    /**\n     * Get previous page from specified\n     *\n     * @param {Page} current\n     */\n    public prevBy(current: Page): Page {\n        const idx = this.pages.indexOf(current);\n\n        if (idx > 0) return this.pages[idx - 1];\n\n        return null;\n    }\n\n    /**\n     * Get flipping page depending on the direction\n     *\n     * @param {FlipDirection} direction\n     */\n    public getFlippingPage(direction: FlipDirection): Page {\n        const current = this.currentSpreadIndex;\n\n        if (this.render.getOrientation() === Orientation.PORTRAIT) {\n            return direction === FlipDirection.FORWARD\n                ? this.pages[current].newTemporaryCopy()\n                : this.pages[current - 1];\n        } else {\n            const spread =\n                direction === FlipDirection.FORWARD\n                    ? this.getSpread()[current + 1]\n                    : this.getSpread()[current - 1];\n\n            if (spread.length === 1) return this.pages[spread[0]];\n\n            return direction === FlipDirection.FORWARD\n                ? this.pages[spread[0]]\n                : this.pages[spread[1]];\n        }\n    }\n\n    /**\n     * Get Next page at the time of flipping\n     *\n     * @param {FlipDirection}  direction\n     */\n    public getBottomPage(direction: FlipDirection): Page {\n        const current = this.currentSpreadIndex;\n\n        if (this.render.getOrientation() === Orientation.PORTRAIT) {\n            return direction === FlipDirection.FORWARD\n                ? this.pages[current + 1]\n                : this.pages[current - 1];\n        } else {\n            const spread =\n                direction === FlipDirection.FORWARD\n                    ? this.getSpread()[current + 1]\n                    : this.getSpread()[current - 1];\n\n            if (spread.length === 1) return this.pages[spread[0]];\n\n            return direction === FlipDirection.FORWARD\n                ? this.pages[spread[1]]\n                : this.pages[spread[0]];\n        }\n    }\n\n    /**\n     * Show next spread\n     */\n    public showNext(): void {\n        if (this.currentSpreadIndex < this.getSpread().length) {\n            this.currentSpreadIndex++;\n            this.showSpread();\n        }\n    }\n\n    /**\n     * Show prev spread\n     */\n    public showPrev(): void {\n        if (this.currentSpreadIndex > 0) {\n            this.currentSpreadIndex--;\n            this.showSpread();\n        }\n    }\n\n    /**\n     * Get the number of the current spread in book\n     */\n    public getCurrentPageIndex(): number {\n        return this.currentPageIndex;\n    }\n\n    /**\n     * Show specified page\n     * @param {number} pageNum - Page index (from 0s)\n     */\n    public show(pageNum: number = null): void {\n        if (pageNum === null) pageNum = this.currentPageIndex;\n\n        if (pageNum < 0 || pageNum >= this.pages.length) return;\n\n        const spreadIndex = this.getSpreadIndexByPage(pageNum);\n        if (spreadIndex !== null) {\n            this.currentSpreadIndex = spreadIndex;\n            this.showSpread();\n        }\n    }\n\n    /**\n     * Index of the current page in list\n     */\n    public getCurrentSpreadIndex(): number {\n        return this.currentSpreadIndex;\n    }\n\n    /**\n     * Set new spread index as current\n     *\n     * @param {number} newIndex - new spread index\n     */\n    public setCurrentSpreadIndex(newIndex: number): void {\n        if (newIndex >= 0 && newIndex < this.getSpread().length) {\n            this.currentSpreadIndex = newIndex;\n        } else {\n            throw new Error('Invalid page');\n        }\n    }\n\n    /**\n     * Show current spread\n     */\n    private showSpread(): void {\n        const spread = this.getSpread()[this.currentSpreadIndex];\n\n        if (spread.length === 2) {\n            this.render.setLeftPage(this.pages[spread[0]]);\n            this.render.setRightPage(this.pages[spread[1]]);\n        } else {\n            if (this.render.getOrientation() === Orientation.LANDSCAPE) {\n                if (spread[0] === this.pages.length - 1) {\n                    this.render.setLeftPage(this.pages[spread[0]]);\n                    this.render.setRightPage(null);\n                } else {\n                    this.render.setLeftPage(null);\n                    this.render.setRightPage(this.pages[spread[0]]);\n                }\n            } else {\n                this.render.setLeftPage(null);\n                this.render.setRightPage(this.pages[spread[0]]);\n            }\n        }\n\n        this.currentPageIndex = spread[0];\n        this.app.updatePageIndex(this.currentPageIndex);\n    }\n}\n","import { ImagePage } from '../Page/ImagePage';\nimport { Render } from '../Render/Render';\nimport { PageCollection } from './PageCollection';\nimport { PageFlip } from '../PageFlip';\nimport { PageDensity } from '../Page/Page';\n\n/**\n * Ð¡lass representing a collection of pages as images on the canvas\n */\nexport class ImagePageCollection extends PageCollection {\n    private readonly imagesHref: string[];\n\n    constructor(app: PageFlip, render: Render, imagesHref: string[]) {\n        super(app, render);\n\n        this.imagesHref = imagesHref;\n    }\n\n    public load(): void {\n        for (const href of this.imagesHref) {\n            const page = new ImagePage(this.render, href, PageDensity.SOFT);\n\n            page.load();\n            this.pages.push(page);\n        }\n\n        this.createSpread();\n    }\n}\n","import { Point, Rect, Segment } from './BasicTypes';\n\n/**\n * A class containing helping mathematical methods\n */\nexport class Helper {\n    /**\n     * Get the distance between two points\n     *\n     * @param {Point} point1\n     * @param {Point} point2\n     */\n    public static GetDistanceBetweenTwoPoint(point1: Point, point2: Point): number {\n        if (point1 === null || point2 === null) {\n            return Infinity;\n        }\n\n        return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n    }\n\n    /**\n     * Get the length of the line segment\n     *\n     * @param {Segment} segment\n     */\n    public static GetSegmentLength(segment: Segment): number {\n        return Helper.GetDistanceBetweenTwoPoint(segment[0], segment[1]);\n    }\n\n    /**\n     * Get the angle between two lines\n     *\n     * @param {Segment} line1\n     * @param {Segment} line2\n     */\n    public static GetAngleBetweenTwoLine(line1: Segment, line2: Segment): number {\n        const A1 = line1[0].y - line1[1].y;\n        const A2 = line2[0].y - line2[1].y;\n\n        const B1 = line1[1].x - line1[0].x;\n        const B2 = line2[1].x - line2[0].x;\n\n        return Math.acos((A1 * A2 + B1 * B2) / (Math.sqrt(A1 * A1 + B1 * B1) * Math.sqrt(A2 * A2 + B2 * B2)));\n    }\n\n    /**\n     * Check for a point in a rectangle\n     *\n     * @param {Rect} rect\n     * @param {Point} pos\n     *\n     * @returns {Point} If the point enters the rectangle its coordinates will be returned, otherwise - null\n     */\n    public static PointInRect(rect: Rect, pos: Point): Point {\n        if (pos === null) {\n            return null;\n        }\n\n        if (\n            pos.x >= rect.left &&\n            pos.x <= rect.width + rect.left &&\n            pos.y >= rect.top &&\n            pos.y <= rect.top + rect.height\n        ) {\n            return pos;\n        }\n        return null;\n    }\n\n    /**\n     * Transform point coordinates to a given angle\n     *\n     * @param {Point} transformedPoint - Point to rotate\n     * @param {Point} startPoint - Transformation reference point\n     * @param {number} angle - Rotation angle (in radians)\n     *\n     * @returns {Point} Point coordinates after rotation\n     */\n    public static GetRotatedPoint(transformedPoint: Point, startPoint: Point, angle: number): Point {\n        return {\n            x: transformedPoint.x * Math.cos(angle) + transformedPoint.y * Math.sin(angle) + startPoint.x,\n            y: transformedPoint.y * Math.cos(angle) - transformedPoint.x * Math.sin(angle) + startPoint.y,\n        };\n    }\n\n    /**\n     * Limit a point \"linePoint\" to a given circle centered at point \"startPoint\" and a given radius\n     *\n     * @param {Point} startPoint - Circle center\n     * @param {number} radius - Circle radius\n     * @param {Point} limitedPoint - Ð¡hecked point\n     *\n     * @returns {Point} If \"linePoint\" enters the circle, then its coordinates are returned.\n     * Else will be returned the intersection point between the line ([startPoint, linePoint]) and the circle\n     */\n    public static LimitPointToCircle(startPoint: Point, radius: number, limitedPoint: Point): Point {\n        // If \"linePoint\" enters the circle, do nothing\n        if (Helper.GetDistanceBetweenTwoPoint(startPoint, limitedPoint) <= radius) {\n            return limitedPoint;\n        }\n\n        const a = startPoint.x;\n        const b = startPoint.y;\n        const n = limitedPoint.x;\n        const m = limitedPoint.y;\n\n        // Find the intersection between the line at two points: (startPoint and limitedPoint) and the circle.\n        let x = Math.sqrt((Math.pow(radius, 2) * Math.pow(a - n, 2)) / (Math.pow(a - n, 2) + Math.pow(b - m, 2))) + a;\n        if (limitedPoint.x < 0) {\n            x *= -1;\n        }\n\n        let y = ((x - a) * (b - m)) / (a - n) + b;\n        if (a - n + b === 0) {\n            y = radius;\n        }\n\n        return { x, y };\n    }\n\n    /**\n     * Find the intersection of two lines bounded by a rectangle \"rectBorder\"\n     *\n     * @param {Rect} rectBorder\n     * @param {Segment} one\n     * @param {Segment} two\n     *\n     * @returns {Point} The intersection point, or \"null\" if it does not exist, or it lies outside the rectangle \"rectBorder\"\n     */\n    public static GetIntersectBetweenTwoSegment(rectBorder: Rect, one: Segment, two: Segment): Point {\n        return Helper.PointInRect(rectBorder, Helper.GetIntersectBeetwenTwoLine(one, two));\n    }\n\n    /**\n     * Find the intersection point of two lines\n     *\n     * @param one\n     * @param two\n     *\n     * @returns {Point} The intersection point, or \"null\" if it does not exist\n     * @throws Error if the segments are on the same line\n     */\n    public static GetIntersectBeetwenTwoLine(one: Segment, two: Segment): Point {\n        const A1 = one[0].y - one[1].y;\n        const A2 = two[0].y - two[1].y;\n\n        const B1 = one[1].x - one[0].x;\n        const B2 = two[1].x - two[0].x;\n\n        const C1 = one[0].x * one[1].y - one[1].x * one[0].y;\n        const C2 = two[0].x * two[1].y - two[1].x * two[0].y;\n\n        const det1 = A1 * C2 - A2 * C1;\n        const det2 = B1 * C2 - B2 * C1;\n\n        const x = -((C1 * B2 - C2 * B1) / (A1 * B2 - A2 * B1));\n        const y = -((A1 * C2 - A2 * C1) / (A1 * B2 - A2 * B1));\n\n        if (isFinite(x) && isFinite(y)) {\n            return { x, y };\n        } else {\n            if (Math.abs(det1 - det2) < 0.1) throw new Error('Segment included');\n        }\n\n        return null;\n    }\n\n    /**\n     * Get a list of coordinates (step: 1px) between two points\n     *\n     * @param pointOne\n     * @param pointTwo\n     *\n     * @returns {Point[]}\n     */\n    public static GetCordsFromTwoPoint(pointOne: Point, pointTwo: Point): Point[] {\n        const sizeX = Math.abs(pointOne.x - pointTwo.x);\n        const sizeY = Math.abs(pointOne.y - pointTwo.y);\n\n        const lengthLine = Math.max(sizeX, sizeY);\n\n        const result: Point[] = [pointOne];\n\n        function getCord(c1: number, c2: number, size: number, length: number, index: number): number {\n            if (c2 > c1) {\n                return c1 + index * (size / length);\n            } else if (c2 < c1) {\n                return c1 - index * (size / length);\n            }\n\n            return c1;\n        }\n\n        for (let i = 1; i <= lengthLine; i += 1) {\n            result.push({\n                x: getCord(pointOne.x, pointTwo.x, sizeX, lengthLine, i),\n                y: getCord(pointOne.y, pointTwo.y, sizeY, lengthLine, i),\n            });\n        }\n\n        return result;\n    }\n}\n","import { Page, PageDensity, PageOrientation } from './Page';\nimport { Render } from '../Render/Render';\nimport { Helper } from '../Helper';\nimport { FlipDirection } from '../Flip/Flip';\nimport { Point } from '../BasicTypes';\n\n/**\n * Class representing a book page as a HTML Element\n */\nexport class HTMLPage extends Page {\n    private readonly element: HTMLElement;\n    private copiedElement: HTMLElement = null;\n\n    private temporaryCopy: Page = null;\n\n    private isLoad = false;\n\n    constructor(render: Render, element: HTMLElement, density: PageDensity) {\n        super(render, density);\n\n        this.element = element;\n        this.element.classList.add('stf__item');\n        this.element.classList.add('--' + density);\n    }\n\n    public newTemporaryCopy(): Page {\n        if (this.nowDrawingDensity === PageDensity.HARD) {\n            return this;\n        }\n\n        if (this.temporaryCopy === null) {\n            this.copiedElement = this.element.cloneNode(true) as HTMLElement;\n            this.element.parentElement.appendChild(this.copiedElement);\n\n            this.temporaryCopy = new HTMLPage(\n                this.render,\n                this.copiedElement,\n                this.nowDrawingDensity\n            );\n        }\n\n        return this.getTemporaryCopy();\n    }\n\n    public getTemporaryCopy(): Page {\n        return this.temporaryCopy;\n    }\n\n    public hideTemporaryCopy(): void {\n        if (this.temporaryCopy !== null) {\n            this.copiedElement.remove();\n            this.copiedElement = null;\n            this.temporaryCopy = null;\n        }\n    }\n\n    public draw(tempDensity?: PageDensity): void {\n        const density = tempDensity ? tempDensity : this.nowDrawingDensity;\n\n        const pagePos = this.render.convertToGlobal(this.state.position);\n        const pageWidth = this.render.getRect().pageWidth;\n        const pageHeight = this.render.getRect().height;\n\n        this.element.classList.remove('--simple');\n\n        const commonStyle = `\n            display: block;\n            z-index: ${this.element.style.zIndex};\n            left: 0;\n            top: 0;\n            width: ${pageWidth}px;\n            height: ${pageHeight}px;\n        `;\n\n        density === PageDensity.HARD\n            ? this.drawHard(commonStyle)\n            : this.drawSoft(pagePos, commonStyle);\n    }\n\n    private drawHard(commonStyle = ''): void {\n        const pos = this.render.getRect().left + this.render.getRect().width / 2;\n\n        const angle = this.state.hardDrawingAngle;\n\n        const newStyle =\n            commonStyle +\n            `\n                backface-visibility: hidden;\n                -webkit-backface-visibility: hidden;\n                clip-path: none;\n                -webkit-clip-path: none;\n            ` +\n            (this.orientation === PageOrientation.LEFT\n                ? `transform-origin: ${this.render.getRect().pageWidth}px 0; \n                   transform: translate3d(0, 0, 0) rotateY(${angle}deg);`\n                : `transform-origin: 0 0; \n                   transform: translate3d(${pos}px, 0, 0) rotateY(${angle}deg);`);\n\n        this.element.style.cssText = newStyle;\n    }\n\n    private drawSoft(position: Point, commonStyle = ''): void {\n        let polygon = 'polygon( ';\n        for (const p of this.state.area) {\n            if (p !== null) {\n                let g =\n                    this.render.getDirection() === FlipDirection.BACK\n                        ? {\n                              x: -p.x + this.state.position.x,\n                              y: p.y - this.state.position.y,\n                          }\n                        : {\n                              x: p.x - this.state.position.x,\n                              y: p.y - this.state.position.y,\n                          };\n\n                g = Helper.GetRotatedPoint(g, { x: 0, y: 0 }, this.state.angle);\n                polygon += g.x + 'px ' + g.y + 'px, ';\n            }\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n\n        const newStyle =\n            commonStyle +\n            `transform-origin: 0 0; clip-path: ${polygon}; -webkit-clip-path: ${polygon};` +\n            (this.render.isSafari() && this.state.angle === 0\n                ? `transform: translate(${position.x}px, ${position.y}px);`\n                : `transform: translate3d(${position.x}px, ${position.y}px, 0) rotate(${this.state.angle}rad);`);\n\n        this.element.style.cssText = newStyle;\n    }\n\n    public simpleDraw(orient: PageOrientation): void {\n        const rect = this.render.getRect();\n\n        const pageWidth = rect.pageWidth;\n        const pageHeight = rect.height;\n\n        const x = orient === PageOrientation.RIGHT ? rect.left + rect.pageWidth : rect.left;\n\n        const y = rect.top;\n\n        this.element.classList.add('--simple');\n        this.element.style.cssText = `\n            position: absolute; \n            display: block; \n            height: ${pageHeight}px; \n            left: ${x}px; \n            top: ${y}px; \n            width: ${pageWidth}px; \n            z-index: ${this.render.getSettings().startZIndex + 1};`;\n    }\n\n    public getElement(): HTMLElement {\n        return this.element;\n    }\n\n    public load(): void {\n        this.isLoad = true;\n    }\n\n    public setOrientation(orientation: PageOrientation): void {\n        super.setOrientation(orientation);\n        this.element.classList.remove('--left', '--right');\n\n        this.element.classList.add(orientation === PageOrientation.RIGHT ? '--right' : '--left');\n    }\n\n    public setDrawingDensity(density: PageDensity): void {\n        this.element.classList.remove('--soft', '--hard');\n        this.element.classList.add('--' + density);\n\n        super.setDrawingDensity(density);\n    }\n}\n","import { HTMLPage } from '../Page/HTMLPage';\nimport { Render } from '../Render/Render';\nimport { PageCollection } from './PageCollection';\nimport { PageFlip } from '../PageFlip';\nimport { PageDensity } from '../Page/Page';\n\n/**\n * Ð¡lass representing a collection of pages as HTML Element\n */\nexport class HTMLPageCollection extends PageCollection {\n    private readonly element: HTMLElement;\n    private readonly pagesElement: NodeListOf<HTMLElement> | HTMLElement[];\n\n    constructor(\n        app: PageFlip,\n        render: Render,\n        element: HTMLElement,\n        items: NodeListOf<HTMLElement> | HTMLElement[]\n    ) {\n        super(app, render);\n\n        this.element = element;\n        this.pagesElement = items;\n    }\n\n    public load(): void {\n        for (const pageElement of this.pagesElement as any) {\n            const page = new HTMLPage(\n                this.render,\n                pageElement,\n                pageElement.dataset['density'] === 'hard' ? PageDensity.HARD : PageDensity.SOFT\n            );\n\n            page.load();\n            this.pages.push(page);\n        }\n\n        this.createSpread();\n    }\n}\n","import { Helper } from '../Helper';\nimport { Point, Rect, RectPoints, Segment } from '../BasicTypes';\nimport { FlipCorner, FlipDirection } from './Flip';\n\n/**\n * Class representing mathematical methods for calculating page position (rotation angle, clip area ...)\n */\nexport class FlipCalculation {\n    /** Calculated rotation angle to flipping page */\n    private angle: number;\n    /** Calculated position to flipping page */\n    private position: Point;\n\n    private rect: RectPoints;\n\n    /** The point of intersection of the page with the borders of the book */\n    private topIntersectPoint: Point = null; // With top border\n    private sideIntersectPoint: Point = null; // With side border\n    private bottomIntersectPoint: Point = null; // With bottom border\n\n    private readonly pageWidth: number;\n    private readonly pageHeight: number;\n\n    /**\n     * @constructor\n     *\n     * @param {FlipDirection} direction - Flipping direction\n     * @param {FlipCorner} corner - Flipping corner\n     * @param pageWidth - Current page width\n     * @param pageHeight - Current page height\n     */\n    constructor(\n        private direction: FlipDirection,\n        private corner: FlipCorner,\n\n        pageWidth: string,\n        pageHeight: string\n    ) {\n        this.pageWidth = parseInt(pageWidth, 10);\n        this.pageHeight = parseInt(pageHeight, 10);\n    }\n\n    /**\n     * The main calculation method\n     * \n     * @param {Point} localPos - Touch Point Coordinates (relative active page!)\n     * \n     * @returns {boolean} True - if the calculations were successful, false if errors occurred\n     */\n    public calc(localPos: Point): boolean {\n        try {\n            // Find: page rotation angle and active corner position\n            this.position = this.calcAngleAndPosition(localPos);\n            // Find the intersection points of the scrolling page and the book\n            this.calculateIntersectPoint(this.position);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Get the crop area for the flipping page\n     * \n     * @returns {Point[]} Polygon page\n     */\n    public getFlippingClipArea(): Point[] {\n        const result = [];\n        let clipBottom = false;\n\n        result.push(this.rect.topLeft);\n        result.push(this.topIntersectPoint);\n\n        if (this.sideIntersectPoint === null) {\n            clipBottom = true;\n        } else {\n            result.push(this.sideIntersectPoint);\n\n            if (this.bottomIntersectPoint === null) clipBottom = false;\n        }\n\n        result.push(this.bottomIntersectPoint);\n\n        if (clipBottom || this.corner === FlipCorner.BOTTOM) {\n            result.push(this.rect.bottomLeft);\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the crop area for the page that is below the page to be flipped\n     * \n     * @returns {Point[]} Polygon page\n     */\n    public getBottomClipArea(): Point[] {\n        const result = [];\n\n        result.push(this.topIntersectPoint);\n\n        if (this.corner === FlipCorner.TOP) {\n            result.push({ x: this.pageWidth, y: 0 });\n        } else {\n            if (this.topIntersectPoint !== null) {\n                result.push({ x: this.pageWidth, y: 0 });\n            }\n            result.push({ x: this.pageWidth, y: this.pageHeight });\n        }\n\n        if (this.sideIntersectPoint !== null) {\n            if (\n                Helper.GetDistanceBetweenTwoPoint(\n                    this.sideIntersectPoint,\n                    this.topIntersectPoint\n                ) >= 10\n            )\n                result.push(this.sideIntersectPoint);\n        } else {\n            if (this.corner === FlipCorner.TOP) {\n                result.push({ x: this.pageWidth, y: this.pageHeight });\n            }\n        }\n\n        result.push(this.bottomIntersectPoint);\n        result.push(this.topIntersectPoint);\n\n        return result;\n    }\n\n    /**\n     * Get page rotation angle\n     */\n    public getAngle(): number {\n        if (this.direction === FlipDirection.FORWARD) {\n            return -this.angle;\n        }\n\n        return this.angle;\n    }\n\n    /**\n     * Get page area while flipping\n     */\n    public getRect(): RectPoints {\n        return this.rect;\n    }\n\n    /**\n     * Get the position of the active angle when turning\n     */\n    public getPosition(): Point {\n        return this.position;\n    }\n\n    /**\n     * Get the active corner of the page (which pull)\n     */\n    public getActiveCorner(): Point {\n        if (this.direction === FlipDirection.FORWARD) {\n            return this.rect.topLeft;\n        }\n\n        return this.rect.topRight;\n    }\n\n    /**\n     * Get flipping direction\n     */\n    public getDirection(): FlipDirection {\n        return this.direction;\n    }\n\n    /**\n     * Get flipping progress (0-100)\n     */\n    public getFlippingProgress(): number {\n        return Math.abs(((this.position.x - this.pageWidth) / (2 * this.pageWidth)) * 100);\n    }\n    \n    /**\n     * Get flipping corner position (top, bottom)\n     */\n    public getCorner(): FlipCorner {\n        return this.corner;\n    }\n\n    /**\n     * Get start position for the page that is below the page to be flipped\n     */\n    public getBottomPagePosition(): Point {\n        if (this.direction === FlipDirection.BACK) {\n            return { x: this.pageWidth, y: 0 };\n        }\n\n        return { x: 0, y: 0 };\n    }\n\n    /**\n     * Get the starting position of the shadow\n     */\n    public getShadowStartPoint(): Point {\n        if (this.corner === FlipCorner.TOP) {\n            return this.topIntersectPoint;\n        } else {\n            if (this.sideIntersectPoint !== null) return this.sideIntersectPoint;\n\n            return this.topIntersectPoint;\n        }\n    }\n\n    /**\n     * Get the rotate angle of the shadow\n     */\n    public getShadowAngle(): number {\n        const angle = Helper.GetAngleBetweenTwoLine(this.getSegmentToShadowLine(), [\n            { x: 0, y: 0 },\n            { x: this.pageWidth, y: 0 },\n        ]);\n\n        if (this.direction === FlipDirection.FORWARD) {\n            return angle;\n        }\n\n        return Math.PI - angle;\n    }\n\n    private calcAngleAndPosition(pos: Point): Point {\n        let result = pos;\n\n        this.updateAngleAndGeometry(result);\n\n        if (this.corner === FlipCorner.TOP) {\n            result = this.checkPositionAtCenterLine(\n                result,\n                { x: 0, y: 0 },\n                { x: 0, y: this.pageHeight }\n            );\n        } else {\n            result = this.checkPositionAtCenterLine(\n                result,\n                { x: 0, y: this.pageHeight },\n                { x: 0, y: 0 }\n            );\n        }\n\n        if (Math.abs(result.x - this.pageWidth) < 1 && Math.abs(result.y) < 1) {\n            throw new Error('Point is too small');\n        }\n\n        return result;\n    }\n\n    private updateAngleAndGeometry(pos: Point): void {\n        this.angle = this.calculateAngle(pos);\n        this.rect = this.getPageRect(pos);\n    }\n\n    private calculateAngle(pos: Point): number {\n        const left = this.pageWidth - pos.x + 1;\n        const top = this.corner === FlipCorner.BOTTOM ? this.pageHeight - pos.y : pos.y;\n\n        let angle = 2 * Math.acos(left / Math.sqrt(top * top + left * left));\n\n        if (top < 0) angle = -angle;\n\n        const da = Math.PI - angle;\n        if (!isFinite(angle) || (da >= 0 && da < 0.003))\n            throw new Error('The G point is too small');\n\n        if (this.corner === FlipCorner.BOTTOM) angle = -angle;\n\n        return angle;\n    }\n\n\n    private getPageRect(localPos: Point): RectPoints {\n        if (this.corner === FlipCorner.TOP) {\n            return this.getRectFromBasePoint(\n                [\n                    { x: 0, y: 0 },\n                    { x: this.pageWidth, y: 0 },\n                    { x: 0, y: this.pageHeight },\n                    { x: this.pageWidth, y: this.pageHeight },\n                ],\n                localPos\n            );\n        }\n\n        return this.getRectFromBasePoint(\n            [\n                { x: 0, y: -this.pageHeight },\n                { x: this.pageWidth, y: -this.pageHeight },\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n            ],\n            localPos\n        );\n    }\n\n    private getRectFromBasePoint(points: Point[], localPos: Point): RectPoints {\n        return {\n            topLeft: this.getRotatedPoint(points[0], localPos),\n            topRight: this.getRotatedPoint(points[1], localPos),\n            bottomLeft: this.getRotatedPoint(points[2], localPos),\n            bottomRight: this.getRotatedPoint(points[3], localPos),\n        };\n    }\n\n    private getRotatedPoint(transformedPoint: Point, startPoint: Point): Point {\n        return {\n            x:\n                transformedPoint.x * Math.cos(this.angle) +\n                transformedPoint.y * Math.sin(this.angle) +\n                startPoint.x,\n            y:\n                transformedPoint.y * Math.cos(this.angle) -\n                transformedPoint.x * Math.sin(this.angle) +\n                startPoint.y,\n        };\n    }\n\n    private calculateIntersectPoint(pos: Point): void {\n        const boundRect: Rect = {\n            left: -1,\n            top: -1,\n            width: this.pageWidth + 2,\n            height: this.pageHeight + 2,\n        };\n\n        if (this.corner === FlipCorner.TOP) {\n            this.topIntersectPoint = Helper.GetIntersectBetweenTwoSegment(\n                boundRect,\n                [pos, this.rect.topRight],\n                [\n                    { x: 0, y: 0 },\n                    { x: this.pageWidth, y: 0 },\n                ]\n            );\n\n            this.sideIntersectPoint = Helper.GetIntersectBetweenTwoSegment(\n                boundRect,\n                [pos, this.rect.bottomLeft],\n                [\n                    { x: this.pageWidth, y: 0 },\n                    { x: this.pageWidth, y: this.pageHeight },\n                ]\n            );\n\n            this.bottomIntersectPoint = Helper.GetIntersectBetweenTwoSegment(\n                boundRect,\n                [this.rect.bottomLeft, this.rect.bottomRight],\n                [\n                    { x: 0, y: this.pageHeight },\n                    { x: this.pageWidth, y: this.pageHeight },\n                ]\n            );\n        } else {\n            this.topIntersectPoint = Helper.GetIntersectBetweenTwoSegment(\n                boundRect,\n                [this.rect.topLeft, this.rect.topRight],\n                [\n                    { x: 0, y: 0 },\n                    { x: this.pageWidth, y: 0 },\n                ]\n            );\n\n            this.sideIntersectPoint = Helper.GetIntersectBetweenTwoSegment(\n                boundRect,\n                [pos, this.rect.topLeft],\n                [\n                    { x: this.pageWidth, y: 0 },\n                    { x: this.pageWidth, y: this.pageHeight },\n                ]\n            );\n\n            this.bottomIntersectPoint = Helper.GetIntersectBetweenTwoSegment(\n                boundRect,\n                [this.rect.bottomLeft, this.rect.bottomRight],\n                [\n                    { x: 0, y: this.pageHeight },\n                    { x: this.pageWidth, y: this.pageHeight },\n                ]\n            );\n        }\n    }\n\n    private checkPositionAtCenterLine(\n        checkedPos: Point,\n        centerOne: Point,\n        centerTwo: Point\n    ): Point {\n        let result = checkedPos;\n\n        const tmp = Helper.LimitPointToCircle(centerOne, this.pageWidth, result);\n        if (result !== tmp) {\n            result = tmp;\n            this.updateAngleAndGeometry(result);\n        }\n\n        const rad = Math.sqrt(Math.pow(this.pageWidth, 2) + Math.pow(this.pageHeight, 2));\n\n        let checkPointOne = this.rect.bottomRight;\n        let checkPointTwo = this.rect.topLeft;\n\n        if (this.corner === FlipCorner.BOTTOM) {\n            checkPointOne = this.rect.topRight;\n            checkPointTwo = this.rect.bottomLeft;\n        }\n\n        if (checkPointOne.x <= 0) {\n            const bottomPoint = Helper.LimitPointToCircle(centerTwo, rad, checkPointTwo);\n\n            if (bottomPoint !== result) {\n                result = bottomPoint;\n                this.updateAngleAndGeometry(result);\n            }\n        }\n\n        return result;\n    }\n\n    private getSegmentToShadowLine(): Segment {\n        const first = this.getShadowStartPoint();\n\n        const second =\n            first !== this.sideIntersectPoint && this.sideIntersectPoint !== null\n                ? this.sideIntersectPoint\n                : this.bottomIntersectPoint;\n\n        return [first, second];\n    }\n}\n","import { Orientation, Render } from '../Render/Render';\nimport { PageFlip } from '../PageFlip';\nimport { Helper } from '../Helper';\nimport { PageRect, Point } from '../BasicTypes';\nimport { FlipCalculation } from './FlipCalculation';\nimport { Page, PageDensity } from '../Page/Page';\n\n/**\n * Flipping direction\n */\nexport const enum FlipDirection {\n    FORWARD,\n    BACK,\n}\n\n/**\n * Active corner when flipping\n */\nexport const enum FlipCorner {\n    TOP = 'top',\n    BOTTOM = 'bottom',\n}\n\n/**\n * State of the book\n */\nexport const enum FlippingState {\n    /** The user folding the page */\n    USER_FOLD = 'user_fold',\n\n    /** Mouse over active corners */\n    FOLD_CORNER = 'fold_corner',\n\n    /** During flipping animation */\n    FLIPPING = 'flipping',\n\n    /** Base state */\n    READ = 'read',\n}\n\n/**\n * Class representing the flipping process\n */\nexport class Flip {\n    private readonly render: Render;\n    private readonly app: PageFlip;\n\n    private flippingPage: Page = null;\n    private bottomPage: Page = null;\n\n    private calc: FlipCalculation = null;\n\n    private state: FlippingState = FlippingState.READ;\n\n    constructor(render: Render, app: PageFlip) {\n        this.render = render;\n        this.app = app;\n    }\n\n    /**\n     * Called when the page folding (User drags page corner)\n     *\n     * @param globalPos - Touch Point Coordinates (relative window)\n     */\n    public fold(globalPos: Point): void {\n        this.setState(FlippingState.USER_FOLD);\n\n        // If the process has not started yet\n        if (this.calc === null) this.start(globalPos);\n\n        this.do(this.render.convertToPage(globalPos));\n    }\n\n    /**\n     * Page turning with animation\n     *\n     * @param globalPos - Touch Point Coordinates (relative window)\n     */\n    public flip(globalPos: Point, hasCheckedJustClick = false): void {\n        if ((document as any).JUST_CLICKED) {\n            console.log('JUST CLICKED');\n            return; // fix bug with double click\n        } else {\n            console.log('NO JUST CLICKED', (document as any).JUST_CLICKED);\n        }\n        if (!hasCheckedJustClick) {\n            setTimeout(() => {\n                this.flip(globalPos, true);\n            }, 50);\n            return;\n        }\n\n        if (this.app.getSettings().disableFlipByClick && !this.isPointOnCorners(globalPos)) return;\n\n        // the flipiing process is already running\n        if (this.calc !== null) this.render.finishAnimation();\n\n        if (!this.start(globalPos)) return;\n\n        const rect = this.getBoundsRect();\n\n        this.setState(FlippingState.FLIPPING);\n\n        // Margin from top to start flipping\n        const topMargins = rect.height / 10;\n\n        // Defining animation start points\n        const yStart =\n            this.calc.getCorner() === FlipCorner.BOTTOM ? rect.height - topMargins : topMargins;\n\n        const yDest = this.calc.getCorner() === FlipCorner.BOTTOM ? rect.height : 0;\n\n        // Ð¡alculations for these points\n        this.calc.calc({ x: rect.pageWidth - topMargins, y: yStart });\n\n        // Run flipping animation\n        this.animateFlippingTo(\n            { x: rect.pageWidth - topMargins, y: yStart },\n            { x: -rect.pageWidth, y: yDest },\n            true\n        );\n    }\n\n    /**\n     * Start the flipping process. Find direction and corner of flipping. Creating an object for calculation.\n     *\n     * @param {Point} globalPos - Touch Point Coordinates (relative window)\n     *\n     * @returns {boolean} True if flipping is possible, false otherwise\n     */\n    public start(globalPos: Point): boolean {\n        this.reset();\n\n        const bookPos = this.render.convertToBook(globalPos);\n        const rect = this.getBoundsRect();\n\n        // Find the direction of flipping\n        const direction = this.getDirectionByPoint(bookPos);\n\n        // Find the active corner\n        const flipCorner = bookPos.y >= rect.height / 2 ? FlipCorner.BOTTOM : FlipCorner.TOP;\n\n        if (!this.checkDirection(direction)) return false;\n\n        try {\n            this.flippingPage = this.app.getPageCollection().getFlippingPage(direction);\n            this.bottomPage = this.app.getPageCollection().getBottomPage(direction);\n\n            // In landscape mode, needed to set the density  of the next page to the same as that of the flipped\n            if (this.render.getOrientation() === Orientation.LANDSCAPE) {\n                if (direction === FlipDirection.BACK) {\n                    const nextPage = this.app.getPageCollection().nextBy(this.flippingPage);\n\n                    if (nextPage !== null) {\n                        if (this.flippingPage.getDensity() !== nextPage.getDensity()) {\n                            this.flippingPage.setDrawingDensity(PageDensity.HARD);\n                            nextPage.setDrawingDensity(PageDensity.HARD);\n                        }\n                    }\n                } else {\n                    const prevPage = this.app.getPageCollection().prevBy(this.flippingPage);\n\n                    if (prevPage !== null) {\n                        if (this.flippingPage.getDensity() !== prevPage.getDensity()) {\n                            this.flippingPage.setDrawingDensity(PageDensity.HARD);\n                            prevPage.setDrawingDensity(PageDensity.HARD);\n                        }\n                    }\n                }\n            }\n\n            this.render.setDirection(direction);\n            this.calc = new FlipCalculation(\n                direction,\n                flipCorner,\n                rect.pageWidth.toString(10), // fix bug with type casting\n                rect.height.toString(10) // fix bug with type casting\n            );\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Perform calculations for the current page position. Pass data to render object\n     *\n     * @param {Point} pagePos - Touch Point Coordinates (relative active page)\n     */\n    private do(pagePos: Point): void {\n        if (this.calc === null) return; // Flipping process not started\n\n        if (this.calc.calc(pagePos)) {\n            // Perform calculations for a specific position\n            const progress = this.calc.getFlippingProgress();\n\n            this.bottomPage.setArea(this.calc.getBottomClipArea());\n            this.bottomPage.setPosition(this.calc.getBottomPagePosition());\n            this.bottomPage.setAngle(0);\n            this.bottomPage.setHardAngle(0);\n\n            this.flippingPage.setArea(this.calc.getFlippingClipArea());\n            this.flippingPage.setPosition(this.calc.getActiveCorner());\n            this.flippingPage.setAngle(this.calc.getAngle());\n\n            if (this.calc.getDirection() === FlipDirection.FORWARD) {\n                this.flippingPage.setHardAngle((90 * (200 - progress * 2)) / 100);\n            } else {\n                this.flippingPage.setHardAngle((-90 * (200 - progress * 2)) / 100);\n            }\n\n            this.render.setPageRect(this.calc.getRect());\n\n            this.render.setBottomPage(this.bottomPage);\n            this.render.setFlippingPage(this.flippingPage);\n\n            this.render.setShadowData(\n                this.calc.getShadowStartPoint(),\n                this.calc.getShadowAngle(),\n                progress,\n                this.calc.getDirection()\n            );\n        }\n    }\n\n    /**\n     * Turn to the specified page number (with animation)\n     *\n     * @param {number} page - New page number\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    public flipToPage(page: number, corner: FlipCorner): void {\n        const current = this.app.getPageCollection().getCurrentSpreadIndex();\n        const next = this.app.getPageCollection().getSpreadIndexByPage(page);\n\n        try {\n            if (next > current) {\n                this.app.getPageCollection().setCurrentSpreadIndex(next - 1);\n                this.flipNext(corner);\n            }\n            if (next < current) {\n                this.app.getPageCollection().setCurrentSpreadIndex(next + 1);\n                this.flipPrev(corner);\n            }\n        } catch (e) {\n            //\n        }\n    }\n\n    /**\n     * Turn to the next page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    public flipNext(corner: FlipCorner): void {\n        this.flip({\n            x: this.render.getRect().left + this.render.getRect().pageWidth * 2 - 10,\n            y: corner === FlipCorner.TOP ? 1 : this.render.getRect().height - 2,\n        });\n    }\n\n    /**\n     * Turn to the prev page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    public flipPrev(corner: FlipCorner): void {\n        this.flip({\n            x: 10,\n            y: corner === FlipCorner.TOP ? 1 : this.render.getRect().height - 2,\n        });\n    }\n\n    /**\n     * Called when the user has stopped flipping\n     */\n    public stopMove(): void {\n        if (this.calc === null) return;\n\n        const pos = this.calc.getPosition();\n        const rect = this.getBoundsRect();\n\n        const y = this.calc.getCorner() === FlipCorner.BOTTOM ? rect.height : 0;\n\n        if (pos.x <= 0) this.animateFlippingTo(pos, { x: -rect.pageWidth, y }, true);\n        else this.animateFlippingTo(pos, { x: rect.pageWidth, y }, false);\n    }\n\n    /**\n     * Fold the corners of the book when the mouse pointer is over them.\n     * Called when the mouse pointer is over the book without clicking\n     *\n     * @param globalPos\n     */\n    public showCorner(globalPos: Point): void {\n        if (!this.checkState(FlippingState.READ, FlippingState.FOLD_CORNER)) return;\n\n        const rect = this.getBoundsRect();\n        const pageWidth = rect.pageWidth;\n\n        if (this.isPointOnCorners(globalPos)) {\n            if (this.calc === null) {\n                if (!this.start(globalPos)) return;\n\n                this.setState(FlippingState.FOLD_CORNER);\n\n                this.calc.calc({ x: pageWidth - 1, y: 1 });\n\n                const fixedCornerSize = 50;\n                const yStart = this.calc.getCorner() === FlipCorner.BOTTOM ? rect.height - 1 : 1;\n\n                const yDest =\n                    this.calc.getCorner() === FlipCorner.BOTTOM\n                        ? rect.height - fixedCornerSize\n                        : fixedCornerSize;\n\n                this.animateFlippingTo(\n                    { x: pageWidth - 1, y: yStart },\n                    { x: pageWidth - fixedCornerSize, y: yDest },\n                    false,\n                    false\n                );\n            } else {\n                this.do(this.render.convertToPage(globalPos));\n            }\n        } else {\n            this.setState(FlippingState.READ);\n            this.render.finishAnimation();\n\n            this.stopMove();\n        }\n    }\n\n    /**\n     * Starting the flipping animation process\n     *\n     * @param {Point} start - animation start point\n     * @param {Point} dest - animation end point\n     * @param {boolean} isTurned - will the page turn over, or just bring it back\n     * @param {boolean} needReset - reset the flipping process at the end of the animation\n     */\n    private animateFlippingTo(\n        start: Point,\n        dest: Point,\n        isTurned: boolean,\n        needReset = true\n    ): void {\n        const points = Helper.GetCordsFromTwoPoint(start, dest);\n\n        // Create frames\n        const frames = [];\n        for (const p of points) frames.push(() => this.do(p));\n\n        const duration = this.getAnimationDuration(points.length);\n\n        this.render.startAnimation(frames, duration, () => {\n            // callback function\n            if (!this.calc) return;\n\n            if (isTurned) {\n                if (this.calc.getDirection() === FlipDirection.BACK) this.app.turnToPrevPage();\n                else this.app.turnToNextPage();\n            }\n\n            if (needReset) {\n                this.render.setBottomPage(null);\n                this.render.setFlippingPage(null);\n                this.render.clearShadow();\n\n                this.setState(FlippingState.READ);\n                this.reset();\n            }\n        });\n    }\n\n    /**\n     * Get the current calculations object\n     */\n    public getCalculation(): FlipCalculation {\n        return this.calc;\n    }\n\n    /**\n     * Get current flipping state\n     */\n    public getState(): FlippingState {\n        return this.state;\n    }\n\n    private setState(newState: FlippingState): void {\n        if (this.state !== newState) {\n            this.app.updateState(newState);\n            this.state = newState;\n        }\n    }\n\n    private getDirectionByPoint(touchPos: Point): FlipDirection {\n        const rect = this.getBoundsRect();\n\n        if (this.render.getOrientation() === Orientation.PORTRAIT) {\n            if (touchPos.x - rect.pageWidth <= rect.width / 5) {\n                return FlipDirection.BACK;\n            }\n        } else if (touchPos.x < rect.width / 2) {\n            return FlipDirection.BACK;\n        }\n\n        return FlipDirection.FORWARD;\n    }\n\n    private getAnimationDuration(size: number): number {\n        const defaultTime = this.app.getSettings().flippingTime;\n\n        if (size >= 1000) return defaultTime;\n\n        return (size / 1000) * defaultTime;\n    }\n\n    private checkDirection(direction: FlipDirection): boolean {\n        if (direction === FlipDirection.FORWARD)\n            return this.app.getCurrentPageIndex() < this.app.getPageCount() - 1;\n\n        return this.app.getCurrentPageIndex() >= 1;\n    }\n\n    private reset(): void {\n        this.calc = null;\n        this.flippingPage = null;\n        this.bottomPage = null;\n    }\n\n    private getBoundsRect(): PageRect {\n        return this.render.getRect();\n    }\n\n    private checkState(...states: FlippingState[]): boolean {\n        for (const state of states) {\n            if (this.state === state) return true;\n        }\n\n        return false;\n    }\n\n    private isPointOnCorners(globalPos: Point): boolean {\n        const rect = this.getBoundsRect();\n        const pageWidth = rect.pageWidth;\n\n        const operatingDistance = Math.sqrt(Math.pow(pageWidth, 2) + Math.pow(rect.height, 2)) / 5;\n\n        const bookPos = this.render.convertToBook(globalPos);\n\n        return (\n            bookPos.x > 0 &&\n            bookPos.y > 0 &&\n            bookPos.x < rect.width &&\n            bookPos.y < rect.height &&\n            (bookPos.x < operatingDistance || bookPos.x > rect.width - operatingDistance) &&\n            (bookPos.y < operatingDistance || bookPos.y > rect.height - operatingDistance)\n        );\n    }\n}\n","import { PageFlip } from '../PageFlip';\nimport { Point, PageRect, RectPoints } from '../BasicTypes';\nimport { FlipDirection } from '../Flip/Flip';\nimport { Page, PageOrientation } from '../Page/Page';\nimport { FlipSetting, SizeType } from '../Settings';\n\ntype FrameAction = () => void;\ntype AnimationSuccessAction = () => void;\n\n/**\n * Type describing calculated values for drop shadows\n */\ntype Shadow = {\n    /** Shadow Position Start Point */\n    pos: Point;\n    /** The angle of the shadows relative to the book */\n    angle: number;\n    /** Base width shadow */\n    width: number;\n    /** Base shadow opacity */\n    opacity: number;\n    /** Flipping Direction, the direction of the shadow gradients */\n    direction: FlipDirection;\n    /** Flipping progress in percent (0 - 100) */\n    progress: number;\n};\n\n/**\n * Type describing the animation process\n * Only one animation process can be started at a same time\n */\ntype AnimationProcess = {\n    /** List of frames in playback order. Each frame is a function. */\n    frames: FrameAction[];\n    /** Total animation duration */\n    duration: number;\n    /** Animation duration of one frame */\n    durationFrame: number;\n    /** Ð¡allback at the end of the animation */\n    onAnimateEnd: AnimationSuccessAction;\n    /** Animation start time (Global Timer) */\n    startedAt: number;\n};\n\n/**\n * Book orientation\n */\nexport const enum Orientation {\n    PORTRAIT = 'portrait',\n    LANDSCAPE = 'landscape',\n}\n\n/**\n * Class responsible for rendering the book\n */\nexport abstract class Render {\n    protected readonly setting: FlipSetting;\n    protected readonly app: PageFlip;\n\n    /** Left static book page */\n    protected leftPage: Page = null;\n    /** Right static book page */\n    protected rightPage: Page = null;\n\n    /** Page currently flipping */\n    protected flippingPage: Page = null;\n    /** Next page at the time of flipping */\n    protected bottomPage: Page = null;\n\n    /** Current flipping direction */\n    protected direction: FlipDirection = null;\n    /** Current book orientation */\n    protected orientation: Orientation = null;\n    /** Ð¡urrent state of the shadows */\n    protected shadow: Shadow = null;\n    /** Ð¡urrent animation process */\n    protected animation: AnimationProcess = null;\n    /** Page borders while flipping */\n    protected pageRect: RectPoints = null;\n    /** Current book area */\n    private boundsRect: PageRect = null;\n\n    /** Timer started from start of rendering */\n    protected timer = 0;\n\n    /**\n     * Safari browser definitions for resolving a bug with a css property clip-area\n     *\n     * https://bugs.webkit.org/show_bug.cgi?id=126207\n     */\n    private safari = false;\n\n    protected constructor(app: PageFlip, setting: FlipSetting) {\n        this.setting = setting;\n        this.app = app;\n\n        // detect safari\n        const regex = new RegExp('Version\\\\/[\\\\d\\\\.]+.*Safari/');\n        this.safari = regex.exec(window.navigator.userAgent) !== null;\n    }\n\n    /**\n     * Rendering action on each requestAnimationFrame call. The entire rendering process is performed only in this method\n     */\n    protected abstract drawFrame(): void;\n\n    /**\n     * Reload the render area, after update pages\n     */\n    public abstract reload(): void;\n\n    /**\n     * Executed when requestAnimationFrame is called. Performs the current animation process and call drawFrame()\n     *\n     * @param timer\n     */\n    private render(timer: number): void {\n        if (this.animation !== null) {\n            // Find current frame of animation\n            const frameIndex = Math.round(\n                (timer - this.animation.startedAt) / this.animation.durationFrame\n            );\n\n            if (frameIndex < this.animation.frames.length) {\n                this.animation.frames[frameIndex]();\n            } else {\n                this.animation.onAnimateEnd();\n                this.animation = null;\n            }\n        }\n\n        this.timer = timer;\n        this.drawFrame();\n    }\n\n    /**\n     * Running requestAnimationFrame, and rendering process\n     */\n    public start(): void {\n        this.update();\n\n        const loop = (timer: number): void => {\n            this.render(timer);\n            requestAnimationFrame(loop);\n        };\n\n        requestAnimationFrame(loop);\n    }\n\n    /**\n     * Start a new animation process\n     *\n     * @param {FrameAction[]} frames - Frame list\n     * @param {number} duration - total animation duration\n     * @param {AnimationSuccessAction} onAnimateEnd - Animation callback function\n     */\n    public startAnimation(\n        frames: FrameAction[],\n        duration: number,\n        onAnimateEnd: AnimationSuccessAction\n    ): void {\n        this.finishAnimation(); // finish the previous animation process\n\n        this.animation = {\n            frames,\n            duration,\n            durationFrame: duration / frames.length,\n            onAnimateEnd,\n            startedAt: this.timer,\n        };\n    }\n\n    /**\n     * End the current animation process and call the callback\n     */\n    public finishAnimation(): void {\n        if (this.animation !== null) {\n            this.animation.frames[this.animation.frames.length - 1]();\n\n            if (this.animation.onAnimateEnd !== null) {\n                this.animation.onAnimateEnd();\n            }\n        }\n\n        this.animation = null;\n    }\n\n    /**\n     * Recalculate the size of the displayed area, and update the page orientation\n     */\n    public update(): void {\n        this.boundsRect = null;\n        const orientation = this.calculateBoundsRect();\n\n        if (this.orientation !== orientation) {\n            this.orientation = orientation;\n            this.app.updateOrientation(orientation);\n        }\n    }\n\n    /**\n     * Calculate the size and position of the book depending on the parent element and configuration parameters\n     */\n    private calculateBoundsRect(): Orientation {\n        let orientation = Orientation.LANDSCAPE;\n\n        const blockWidth = this.getBlockWidth();\n        const middlePoint: Point = {\n            x: blockWidth / 2,\n            y: this.getBlockHeight() / 2,\n        };\n\n        const ratio = this.setting.width / this.setting.height;\n\n        let pageWidth = this.setting.width;\n        let pageHeight = this.setting.height;\n\n        let left = middlePoint.x - pageWidth;\n\n        if (this.setting.size === SizeType.STRETCH) {\n            if (blockWidth < this.setting.minWidth * 2 && this.app.getSettings().usePortrait)\n                orientation = Orientation.PORTRAIT;\n\n            pageWidth =\n                orientation === Orientation.PORTRAIT\n                    ? this.getBlockWidth()\n                    : this.getBlockWidth() / 2;\n\n            if (pageWidth > this.setting.maxWidth) pageWidth = this.setting.maxWidth;\n\n            pageHeight = pageWidth / ratio;\n            if (pageHeight > this.getBlockHeight()) {\n                pageHeight = this.getBlockHeight();\n                pageWidth = pageHeight * ratio;\n            }\n\n            left =\n                orientation === Orientation.PORTRAIT\n                    ? middlePoint.x - pageWidth / 2 - pageWidth\n                    : middlePoint.x - pageWidth;\n        } else {\n            if (blockWidth < pageWidth * 2) {\n                if (this.app.getSettings().usePortrait) {\n                    orientation = Orientation.PORTRAIT;\n                    left = middlePoint.x - pageWidth / 2 - pageWidth;\n                }\n            }\n        }\n\n        this.boundsRect = {\n            left,\n            top: middlePoint.y - pageHeight / 2,\n            width: pageWidth * 2,\n            height: pageHeight,\n            pageWidth: pageWidth,\n        };\n\n        return orientation;\n    }\n\n    /**\n     * Set the current parameters of the drop shadow\n     *\n     * @param {Point} pos - Shadow Position Start Point\n     * @param {number} angle - The angle of the shadows relative to the book\n     * @param {number} progress - Flipping progress in percent (0 - 100)\n     * @param {FlipDirection} direction - Flipping Direction, the direction of the shadow gradients\n     */\n    public setShadowData(\n        pos: Point,\n        angle: number,\n        progress: number,\n        direction: FlipDirection\n    ): void {\n        if (!this.app.getSettings().drawShadow) return;\n\n        const maxShadowOpacity = 100 * this.getSettings().maxShadowOpacity;\n\n        this.shadow = {\n            pos,\n            angle,\n            width: (((this.getRect().pageWidth * 3) / 4) * progress) / 100,\n            opacity: ((100 - progress) * maxShadowOpacity) / 100 / 100,\n            direction,\n            progress: progress * 2,\n        };\n    }\n\n    /**\n     * Clear shadow\n     */\n    public clearShadow(): void {\n        this.shadow = null;\n    }\n\n    /**\n     * Get parent block offset width\n     */\n    public getBlockWidth(): number {\n        return this.app.getUI().getDistElement().offsetWidth;\n    }\n\n    /**\n     * Get parent block offset height\n     */\n    public getBlockHeight(): number {\n        return this.app.getUI().getDistElement().offsetHeight;\n    }\n\n    /**\n     * Get current flipping direction\n     */\n    public getDirection(): FlipDirection {\n        return this.direction;\n    }\n\n    /**\n     * Ð¡urrent size and position of the book\n     */\n    public getRect(): PageRect {\n        if (this.boundsRect === null) this.calculateBoundsRect();\n\n        return this.boundsRect;\n    }\n\n    /**\n     * Get configuration object\n     */\n    public getSettings(): FlipSetting {\n        return this.app.getSettings();\n    }\n\n    /**\n     * Get current book orientation\n     */\n    public getOrientation(): Orientation {\n        return this.orientation;\n    }\n\n    /**\n     * Set page area while flipping\n     *\n     * @param direction\n     */\n    public setPageRect(pageRect: RectPoints): void {\n        this.pageRect = pageRect;\n    }\n\n    /**\n     * Set flipping direction\n     *\n     * @param direction\n     */\n    public setDirection(direction: FlipDirection): void {\n        this.direction = direction;\n    }\n\n    /**\n     * Set right static book page\n     *\n     * @param page\n     */\n    public setRightPage(page: Page): void {\n        if (page !== null) page.setOrientation(PageOrientation.RIGHT);\n\n        this.rightPage = page;\n    }\n\n    /**\n     * Set left static book page\n     * @param page\n     */\n    public setLeftPage(page: Page): void {\n        if (page !== null) page.setOrientation(PageOrientation.LEFT);\n\n        this.leftPage = page;\n    }\n\n    /**\n     * Set next page at the time of flipping\n     * @param page\n     */\n    public setBottomPage(page: Page): void {\n        if (page !== null)\n            page.setOrientation(\n                this.direction === FlipDirection.BACK ? PageOrientation.LEFT : PageOrientation.RIGHT\n            );\n\n        this.bottomPage = page;\n    }\n\n    /**\n     * Set currently flipping page\n     *\n     * @param page\n     */\n    public setFlippingPage(page: Page): void {\n        if (page !== null)\n            page.setOrientation(\n                this.direction === FlipDirection.FORWARD &&\n                    this.orientation !== Orientation.PORTRAIT\n                    ? PageOrientation.LEFT\n                    : PageOrientation.RIGHT\n            );\n\n        this.flippingPage = page;\n    }\n\n    /**\n     * Coordinate conversion function. Window coordinates -> to book coordinates\n     *\n     * @param {Point} pos - Global coordinates relative to the window\n     * @returns {Point} Coordinates relative to the book\n     */\n    public convertToBook(pos: Point): Point {\n        const rect = this.getRect();\n\n        return {\n            x: pos.x - rect.left,\n            y: pos.y - rect.top,\n        };\n    }\n\n    public isSafari(): boolean {\n        return this.safari;\n    }\n\n    /**\n     * Coordinate conversion function. Window coordinates -> to current coordinates of the working page\n     *\n     * @param {Point} pos - Global coordinates relative to the window\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {Point} Coordinates relative to the work page\n     */\n    public convertToPage(pos: Point, direction?: FlipDirection): Point {\n        if (!direction) direction = this.direction;\n\n        const rect = this.getRect();\n        const x =\n            direction === FlipDirection.FORWARD\n                ? pos.x - rect.left - rect.width / 2\n                : rect.width / 2 - pos.x + rect.left;\n\n        return {\n            x,\n            y: pos.y - rect.top,\n        };\n    }\n\n    /**\n     * Coordinate conversion function. Coordinates relative to the work page -> Window coordinates\n     *\n     * @param {Point} pos - Coordinates relative to the work page\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {Point} Global coordinates relative to the window\n     */\n    public convertToGlobal(pos: Point, direction?: FlipDirection): Point {\n        if (!direction) direction = this.direction;\n\n        if (pos == null) return null;\n\n        const rect = this.getRect();\n\n        const x =\n            direction === FlipDirection.FORWARD\n                ? pos.x + rect.left + rect.width / 2\n                : rect.width / 2 - pos.x + rect.left;\n\n        return {\n            x,\n            y: pos.y + rect.top,\n        };\n    }\n\n    /**\n     * Casting the coordinates of the corners of the rectangle in the coordinates relative to the window\n     *\n     * @param {RectPoints} rect - Coordinates of the corners of the rectangle relative to the work page\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {RectPoints} Coordinates of the corners of the rectangle relative to the window\n     */\n    public convertRectToGlobal(rect: RectPoints, direction?: FlipDirection): RectPoints {\n        if (!direction) direction = this.direction;\n\n        return {\n            topLeft: this.convertToGlobal(rect.topLeft, direction),\n            topRight: this.convertToGlobal(rect.topRight, direction),\n            bottomLeft: this.convertToGlobal(rect.bottomLeft, direction),\n            bottomRight: this.convertToGlobal(rect.bottomRight, direction),\n        };\n    }\n}\n","import { Orientation, Render } from './Render';\nimport { PageFlip } from '../PageFlip';\nimport { FlipDirection } from '../Flip/Flip';\nimport { PageOrientation } from '../Page/Page';\nimport { FlipSetting } from '../Settings';\n\n/**\n * Class responsible for rendering the Canvas book\n */\nexport class CanvasRender extends Render {\n    private readonly canvas: HTMLCanvasElement;\n    private readonly ctx: CanvasRenderingContext2D;\n\n    constructor(app: PageFlip, setting: FlipSetting, inCanvas: HTMLCanvasElement) {\n        super(app, setting);\n\n        this.canvas = inCanvas;\n        this.ctx = inCanvas.getContext('2d');\n    }\n\n    public getContext(): CanvasRenderingContext2D {\n        return this.ctx;\n    }\n\n    public reload(): void {\n        //\n    }\n\n    protected drawFrame(): void {\n        this.clear();\n\n        if (this.orientation !== Orientation.PORTRAIT)\n            if (this.leftPage != null) this.leftPage.simpleDraw(PageOrientation.LEFT);\n\n        if (this.rightPage != null) this.rightPage.simpleDraw(PageOrientation.RIGHT);\n\n        if (this.bottomPage != null) this.bottomPage.draw();\n\n        this.drawBookShadow();\n\n        if (this.flippingPage != null) this.flippingPage.draw();\n\n        if (this.shadow != null) {\n            this.drawOuterShadow();\n            this.drawInnerShadow();\n        }\n\n        const rect = this.getRect();\n\n        if (this.orientation === Orientation.PORTRAIT) {\n            this.ctx.beginPath();\n            this.ctx.rect(rect.left + rect.pageWidth, rect.top, rect.width, rect.height);\n            this.ctx.clip();\n        }\n    }\n\n    private drawBookShadow(): void {\n        const rect = this.getRect();\n\n        this.ctx.save();\n        this.ctx.beginPath();\n\n        const shadowSize = rect.width / 20;\n        this.ctx.rect(rect.left, rect.top, rect.width, rect.height);\n\n        const shadowPos = { x: rect.left + rect.width / 2 - shadowSize / 2, y: 0 };\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n\n        const outerGradient = this.ctx.createLinearGradient(0, 0, shadowSize, 0);\n\n        outerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        outerGradient.addColorStop(0.4, 'rgba(0, 0, 0, 0.2)');\n        outerGradient.addColorStop(0.49, 'rgba(0, 0, 0, 0.1)');\n        outerGradient.addColorStop(0.5, 'rgba(0, 0, 0, 0.5)');\n        outerGradient.addColorStop(0.51, 'rgba(0, 0, 0, 0.4)');\n        outerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n\n        this.ctx.clip();\n\n        this.ctx.fillStyle = outerGradient;\n        this.ctx.fillRect(0, 0, shadowSize, rect.height * 2);\n\n        this.ctx.restore();\n    }\n\n    private drawOuterShadow(): void {\n        const rect = this.getRect();\n\n        this.ctx.save();\n        this.ctx.beginPath();\n\n        this.ctx.rect(rect.left, rect.top, rect.width, rect.height);\n\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n\n        this.ctx.rotate(Math.PI + this.shadow.angle + Math.PI / 2);\n\n        const outerGradient = this.ctx.createLinearGradient(0, 0, this.shadow.width, 0);\n\n        if (this.shadow.direction === FlipDirection.FORWARD) {\n            this.ctx.translate(0, -100);\n            outerGradient.addColorStop(0, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            outerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        } else {\n            this.ctx.translate(-this.shadow.width, -100);\n            outerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n            outerGradient.addColorStop(1, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n        }\n\n        this.ctx.clip();\n\n        this.ctx.fillStyle = outerGradient;\n        this.ctx.fillRect(0, 0, this.shadow.width, rect.height * 2);\n\n        this.ctx.restore();\n    }\n\n    private drawInnerShadow(): void {\n        const rect = this.getRect();\n\n        this.ctx.save();\n        this.ctx.beginPath();\n\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n\n        const pageRect = this.convertRectToGlobal(this.pageRect);\n        this.ctx.moveTo(pageRect.topLeft.x, pageRect.topLeft.y);\n        this.ctx.lineTo(pageRect.topRight.x, pageRect.topRight.y);\n        this.ctx.lineTo(pageRect.bottomRight.x, pageRect.bottomRight.y);\n        this.ctx.lineTo(pageRect.bottomLeft.x, pageRect.bottomLeft.y);\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n\n        this.ctx.rotate(Math.PI + this.shadow.angle + Math.PI / 2);\n\n        const isw = (this.shadow.width * 3) / 4;\n        const innerGradient = this.ctx.createLinearGradient(0, 0, isw, 0);\n\n        if (this.shadow.direction === FlipDirection.FORWARD) {\n            this.ctx.translate(-isw, -100);\n\n            innerGradient.addColorStop(1, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0.9, 'rgba(0, 0, 0, 0.05)');\n            innerGradient.addColorStop(0.7, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        } else {\n            this.ctx.translate(0, -100);\n\n            innerGradient.addColorStop(0, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0.1, 'rgba(0, 0, 0, 0.05)');\n            innerGradient.addColorStop(0.3, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        }\n\n        this.ctx.clip();\n\n        this.ctx.fillStyle = innerGradient;\n        this.ctx.fillRect(0, 0, isw, rect.height * 2);\n\n        this.ctx.restore();\n    }\n\n    private clear(): void {\n        this.ctx.fillStyle = 'white';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n","import { PageFlip } from '../PageFlip';\nimport { Point } from '../BasicTypes';\nimport { FlipSetting, SizeType } from '../Settings';\nimport { FlipCorner, FlippingState } from '../Flip/Flip';\nimport { Orientation } from '../Render/Render';\n\ntype SwipeData = {\n    point: Point;\n    time: number;\n};\n\n/**\n * UI Class, represents work with DOM\n */\nexport abstract class UI {\n    protected readonly parentElement: HTMLElement;\n\n    protected readonly app: PageFlip;\n    protected readonly wrapper: HTMLElement;\n    protected distElement: HTMLElement;\n\n    private touchPoint: SwipeData = null;\n    private readonly swipeTimeout = 250;\n    private readonly swipeDistance: number;\n\n    private onResize = (): void => {\n        this.update();\n    };\n\n    /**\n     * @constructor\n     *\n     * @param {HTMLElement} inBlock - Root HTML Element\n     * @param {PageFlip} app - PageFlip instanse\n     * @param {FlipSetting} setting - Configuration object\n     */\n    protected constructor(inBlock: HTMLElement, app: PageFlip, setting: FlipSetting) {\n        this.parentElement = inBlock;\n\n        inBlock.classList.add('stf__parent');\n        // Add first wrapper\n        inBlock.insertAdjacentHTML('afterbegin', '<div class=\"stf__wrapper\"></div>');\n\n        this.wrapper = inBlock.querySelector('.stf__wrapper');\n\n        this.app = app;\n\n        const k = this.app.getSettings().usePortrait ? 1 : 2;\n\n        // Setting block sizes based on configuration\n        inBlock.style.minWidth = setting.minWidth * k + 'px';\n        inBlock.style.minHeight = setting.minHeight + 'px';\n\n        if (setting.size === SizeType.FIXED) {\n            inBlock.style.minWidth = setting.width * k + 'px';\n            inBlock.style.minHeight = setting.height + 'px';\n        }\n\n        if (setting.autoSize) {\n            inBlock.style.width = '100%';\n            inBlock.style.maxWidth = setting.maxWidth * 2 + 'px';\n        }\n\n        inBlock.style.display = 'block';\n\n        window.addEventListener('resize', this.onResize, false);\n        this.swipeDistance = setting.swipeDistance;\n    }\n\n    /**\n     * Destructor. Remove all HTML elements and all event handlers\n     */\n    public destroy(): void {\n        if (this.app.getSettings().useMouseEvents) this.removeHandlers();\n\n        this.distElement.remove();\n        this.wrapper.remove();\n    }\n\n    /**\n     * Updating child components when resizing\n     */\n    public abstract update(): void;\n\n    /**\n     * Get parent element for book\n     *\n     * @returns {HTMLElement}\n     */\n    public getDistElement(): HTMLElement {\n        return this.distElement;\n    }\n\n    /**\n     * Get wrapper element\n     *\n     * @returns {HTMLElement}\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapper;\n    }\n\n    /**\n     * Updates styles and sizes based on book orientation\n     *\n     * @param {Orientation} orientation - New book orientation\n     */\n    public setOrientationStyle(orientation: Orientation): void {\n        this.wrapper.classList.remove('--portrait', '--landscape');\n\n        if (orientation === Orientation.PORTRAIT) {\n            if (this.app.getSettings().autoSize)\n                this.wrapper.style.paddingBottom =\n                    (this.app.getSettings().height / this.app.getSettings().width) * 100 + '%';\n\n            this.wrapper.classList.add('--portrait');\n        } else {\n            if (this.app.getSettings().autoSize)\n                this.wrapper.style.paddingBottom =\n                    (this.app.getSettings().height / (this.app.getSettings().width * 2)) * 100 +\n                    '%';\n\n            this.wrapper.classList.add('--landscape');\n        }\n\n        this.update();\n    }\n\n    protected removeHandlers(): void {\n        window.removeEventListener('resize', this.onResize);\n\n        this.distElement.removeEventListener('mousedown', this.onMouseDown);\n        this.distElement.removeEventListener('touchstart', this.onTouchStart);\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('touchmove', this.onTouchMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n        window.removeEventListener('touchend', this.onTouchEnd);\n    }\n\n    protected setHandlers(): void {\n        window.addEventListener('resize', this.onResize, false);\n        if (!this.app.getSettings().useMouseEvents) return;\n\n        this.distElement.addEventListener('mousedown', this.onMouseDown);\n        this.distElement.addEventListener('touchstart', this.onTouchStart);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('touchmove', this.onTouchMove, {\n            passive: !this.app.getSettings().mobileScrollSupport,\n        });\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('touchend', this.onTouchEnd);\n    }\n\n    /**\n     * Convert global coordinates to relative book coordinates\n     *\n     * @param x\n     * @param y\n     */\n    private getMousePos(x: number, y: number): Point {\n        const rect = this.distElement.getBoundingClientRect();\n\n        return {\n            x: x - rect.left,\n            y: y - rect.top,\n        };\n    }\n\n    private checkTarget(targer: EventTarget): boolean {\n        if (!this.app.getSettings().clickEventForward) return true;\n\n        if (['a', 'button'].includes((targer as HTMLElement).tagName.toLowerCase())) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private onMouseDown = (e: MouseEvent): void => {\n        if (this.checkTarget(e.target)) {\n            const pos = this.getMousePos(e.clientX, e.clientY);\n\n            this.app.startUserTouch(pos);\n\n            e.preventDefault();\n        }\n    };\n\n    private onTouchStart = (e: TouchEvent): void => {\n        if (this.checkTarget(e.target)) {\n            if (e.changedTouches.length > 0) {\n                const t = e.changedTouches[0];\n                const pos = this.getMousePos(t.clientX, t.clientY);\n\n                this.touchPoint = {\n                    point: pos,\n                    time: Date.now(),\n                };\n\n                // part of swipe detection\n                setTimeout(() => {\n                    if (this.touchPoint !== null) {\n                        this.app.startUserTouch(pos);\n                    }\n                }, this.swipeTimeout);\n\n                if (!this.app.getSettings().mobileScrollSupport) e.preventDefault();\n            }\n        }\n    };\n\n    private onMouseUp = (e: MouseEvent): void => {\n        const pos = this.getMousePos(e.clientX, e.clientY);\n\n        this.app.userStop(pos);\n    };\n\n    private onMouseMove = (e: MouseEvent): void => {\n        const pos = this.getMousePos(e.clientX, e.clientY);\n\n        this.app.userMove(pos, false);\n    };\n\n    private onTouchMove = (e: TouchEvent): void => {\n        if (e.changedTouches.length > 0) {\n            const t = e.changedTouches[0];\n            const pos = this.getMousePos(t.clientX, t.clientY);\n\n            if (this.app.getSettings().mobileScrollSupport) {\n                if (this.touchPoint !== null) {\n                    if (\n                        Math.abs(this.touchPoint.point.x - pos.x) > 10 ||\n                        this.app.getState() !== FlippingState.READ\n                    ) {\n                        if (e.cancelable) this.app.userMove(pos, true);\n                    }\n                }\n\n                if (this.app.getState() !== FlippingState.READ) {\n                    e.preventDefault();\n                }\n            } else {\n                this.app.userMove(pos, true);\n            }\n        }\n    };\n\n    private onTouchEnd = (e: TouchEvent): void => {\n        if (e.changedTouches.length > 0) {\n            const t = e.changedTouches[0];\n            const pos = this.getMousePos(t.clientX, t.clientY);\n            let isSwipe = false;\n\n            // swipe detection\n            if (this.touchPoint !== null) {\n                const dx = pos.x - this.touchPoint.point.x;\n                const distY = Math.abs(pos.y - this.touchPoint.point.y);\n\n                if (\n                    Math.abs(dx) > this.swipeDistance &&\n                    distY < this.swipeDistance * 2 &&\n                    Date.now() - this.touchPoint.time < this.swipeTimeout\n                ) {\n                    if (dx > 0) {\n                        this.app.flipPrev(\n                            this.touchPoint.point.y < this.app.getRender().getRect().height / 2\n                                ? FlipCorner.TOP\n                                : FlipCorner.BOTTOM\n                        );\n                    } else {\n                        this.app.flipNext(\n                            this.touchPoint.point.y < this.app.getRender().getRect().height / 2\n                                ? FlipCorner.TOP\n                                : FlipCorner.BOTTOM\n                        );\n                    }\n                    isSwipe = true;\n                }\n\n                this.touchPoint = null;\n            }\n\n            this.app.userStop(pos, isSwipe);\n        }\n    };\n}\n","import { UI } from './UI';\nimport { PageFlip } from '../PageFlip';\nimport { FlipSetting } from '../Settings';\n\n/**\n * UI for HTML mode\n */\nexport class HTMLUI extends UI {\n    private items: NodeListOf<HTMLElement> | HTMLElement[];\n\n    constructor(\n        inBlock: HTMLElement,\n        app: PageFlip,\n        setting: FlipSetting,\n        items: NodeListOf<HTMLElement> | HTMLElement[]\n    ) {\n        super(inBlock, app, setting);\n\n        // Second wrapper to HTML page\n        this.wrapper.insertAdjacentHTML('afterbegin', '<div class=\"stf__block\"></div>');\n\n        this.distElement = inBlock.querySelector('.stf__block');\n\n        this.items = items;\n        for (const item of items as any) {\n            this.distElement.appendChild(item);\n        }\n\n        this.setHandlers();\n    }\n\n    public clear(): void {\n        for (const item of this.items as any) {\n            this.parentElement.appendChild(item);\n        }\n    }\n\n    /**\n     * Update page list from HTMLElements\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    public updateItems(items: NodeListOf<HTMLElement> | HTMLElement[]): void {\n        this.removeHandlers();\n\n        this.distElement.innerHTML = '';\n\n        for (const item of items as any) {\n            this.distElement.appendChild(item);\n        }\n        this.items = items;\n\n        this.setHandlers();\n    }\n\n    public update(): void {\n        this.app.getRender().update();\n    }\n}\n","import {UI} from \"./UI\";\nimport {PageFlip} from \"../PageFlip\";\nimport {FlipSetting} from \"../Settings\";\n\n/**\n * UI for canvas mode\n */\nexport class CanvasUI extends UI {\n    private readonly canvas: HTMLCanvasElement;\n\n    constructor(inBlock: HTMLElement, app: PageFlip, setting: FlipSetting) {\n        super(inBlock, app, setting);\n\n        this.wrapper.innerHTML = '<canvas class=\"stf__canvas\"></canvas>';\n\n        this.canvas = inBlock.querySelectorAll('canvas')[0];\n\n        this.distElement = this.canvas;\n\n        this.resizeCanvas();\n        this.setHandlers();\n    }\n\n    private resizeCanvas(): void {\n        const cs = getComputedStyle(this.canvas);\n        const width = parseInt(cs.getPropertyValue('width'), 10);\n        const height = parseInt(cs.getPropertyValue('height'), 10);\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n\n    /**\n     * Get canvas element\n     */\n    public getCanvas(): HTMLCanvasElement {\n        return this.canvas;\n    }\n\n    public update(): void {\n        this.resizeCanvas();\n        this.app.getRender().update();\n    }\n}","import { PageFlip } from '../PageFlip';\n\n/**\n * Data type passed to the event handler\n */\nexport type DataType = number | string | boolean | object;\n\n/**\n * Type of object in event handlers\n */\nexport interface WidgetEvent {\n    data: DataType;\n    object: PageFlip;\n}\n\ntype EventCallback = (e: WidgetEvent) => void;\n\n/**\n * A class implementing a basic event model\n */\nexport abstract class EventObject {\n    private events = new Map<string, EventCallback[]>();\n\n    /**\n     * Add new event handler\n     *\n     * @param {string} eventName\n     * @param {EventCallback} callback\n     */\n    public on(eventName: string, callback: EventCallback): EventObject {\n        if (!this.events.has(eventName)) {\n            this.events.set(eventName, [callback]);\n        } else {\n            this.events.get(eventName).push(callback);\n        }\n\n        return this;\n    }\n\n    /**\n     * Removing all handlers from an event\n     *\n     * @param {string} event - Event name\n     */\n    public off(event: string): void {\n        this.events.delete(event);\n    }\n\n    protected trigger(eventName: string, app: PageFlip, data: DataType = null): void {\n        if (!this.events.has(eventName)) return;\n\n        for (const callback of this.events.get(eventName)) {\n            callback({ data, object: app });\n        }\n    }\n}\n","import { Orientation, Render } from './Render';\nimport { PageFlip } from '../PageFlip';\nimport { FlipDirection } from '../Flip/Flip';\nimport { PageDensity, PageOrientation } from '../Page/Page';\nimport { HTMLPage } from '../Page/HTMLPage';\nimport { Helper } from '../Helper';\nimport { FlipSetting } from '../Settings';\n\n/**\n * Class responsible for rendering the HTML book\n */\nexport class HTMLRender extends Render {\n    /** Parent HTML Element */\n    private readonly element: HTMLElement;\n\n    /** Pages List as HTMLElements */\n    private readonly items: NodeListOf<HTMLElement> | HTMLElement[];\n\n    private outerShadow: HTMLElement = null;\n    private innerShadow: HTMLElement = null;\n    private hardShadow: HTMLElement = null;\n    private hardInnerShadow: HTMLElement = null;\n\n    /**\n     * @constructor\n     *\n     * @param {PageFlip} app - PageFlip object\n     * @param {FlipSetting} setting - Configuration object\n     * @param {HTMLElement} element - Parent HTML Element\n     */\n    constructor(app: PageFlip, setting: FlipSetting, element: HTMLElement) {\n        super(app, setting);\n\n        this.element = element;\n\n        this.createShadows();\n    }\n\n    private createShadows(): void {\n        this.element.insertAdjacentHTML(\n            'beforeend',\n            `<div class=\"stf__outerShadow\"></div>\n             <div class=\"stf__innerShadow\"></div>\n             <div class=\"stf__hardShadow\"></div>\n             <div class=\"stf__hardInnerShadow\"></div>`\n        );\n\n        this.outerShadow = this.element.querySelector('.stf__outerShadow');\n        this.innerShadow = this.element.querySelector('.stf__innerShadow');\n        this.hardShadow = this.element.querySelector('.stf__hardShadow');\n        this.hardInnerShadow = this.element.querySelector('.stf__hardInnerShadow');\n    }\n\n    public clearShadow(): void {\n        super.clearShadow();\n\n        this.outerShadow.style.cssText = 'display: none';\n        this.innerShadow.style.cssText = 'display: none';\n        this.hardShadow.style.cssText = 'display: none';\n        this.hardInnerShadow.style.cssText = 'display: none';\n    }\n\n    public reload(): void {\n        const testShadow = this.element.querySelector('.stf__outerShadow');\n\n        if (!testShadow) {\n            this.createShadows();\n        }\n    }\n\n    /**\n     * Draw inner shadow to the hard page\n     */\n    private drawHardInnerShadow(): void {\n        const rect = this.getRect();\n\n        const progress =\n            this.shadow.progress > 100 ? 200 - this.shadow.progress : this.shadow.progress;\n\n        let innerShadowSize = ((100 - progress) * (2.5 * rect.pageWidth)) / 100 + 20;\n        if (innerShadowSize > rect.pageWidth) innerShadowSize = rect.pageWidth;\n\n        let newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 5).toString(10)};\n            width: ${innerShadowSize}px;\n            height: ${rect.height}px;\n            background: linear-gradient(to right,\n                rgba(0, 0, 0, ${(this.shadow.opacity * progress) / 100}) 5%,\n                rgba(0, 0, 0, 0) 100%);\n            left: ${rect.left + rect.width / 2}px;\n            transform-origin: 0 0;\n        `;\n\n        newStyle +=\n            (this.getDirection() === FlipDirection.FORWARD && this.shadow.progress > 100) ||\n            (this.getDirection() === FlipDirection.BACK && this.shadow.progress <= 100)\n                ? `transform: translate3d(0, 0, 0);`\n                : `transform: translate3d(0, 0, 0) rotateY(180deg);`;\n\n        this.hardInnerShadow.style.cssText = newStyle;\n    }\n\n    /**\n     * Draw outer shadow to the hard page\n     */\n    private drawHardOuterShadow(): void {\n        const rect = this.getRect();\n\n        const progress =\n            this.shadow.progress > 100 ? 200 - this.shadow.progress : this.shadow.progress;\n\n        let shadowSize = ((100 - progress) * (2.5 * rect.pageWidth)) / 100 + 20;\n        if (shadowSize > rect.pageWidth) shadowSize = rect.pageWidth;\n\n        let newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 4).toString(10)};\n            width: ${shadowSize}px;\n            height: ${rect.height}px;\n            background: linear-gradient(to left, rgba(0, 0, 0, ${\n                this.shadow.opacity\n            }) 5%, rgba(0, 0, 0, 0) 100%);\n            left: ${rect.left + rect.width / 2}px;\n            transform-origin: 0 0;\n        `;\n\n        newStyle +=\n            (this.getDirection() === FlipDirection.FORWARD && this.shadow.progress > 100) ||\n            (this.getDirection() === FlipDirection.BACK && this.shadow.progress <= 100)\n                ? `transform: translate3d(0, 0, 0) rotateY(180deg);`\n                : `transform: translate3d(0, 0, 0);`;\n\n        this.hardShadow.style.cssText = newStyle;\n    }\n\n    /**\n     * Draw inner shadow to the soft page\n     */\n    private drawInnerShadow(): void {\n        const rect = this.getRect();\n\n        const innerShadowSize = (this.shadow.width * 3) / 4;\n        const shadowTranslate = this.getDirection() === FlipDirection.FORWARD ? innerShadowSize : 0;\n\n        const shadowDirection =\n            this.getDirection() === FlipDirection.FORWARD ? 'to left' : 'to right';\n\n        const shadowPos = this.convertToGlobal(this.shadow.pos);\n\n        const angle = this.shadow.angle + (3 * Math.PI) / 2;\n\n        const clip = [\n            this.pageRect.topLeft,\n            this.pageRect.topRight,\n            this.pageRect.bottomRight,\n            this.pageRect.bottomLeft,\n        ];\n\n        let polygon = 'polygon( ';\n        for (const p of clip) {\n            let g =\n                this.getDirection() === FlipDirection.BACK\n                    ? {\n                          x: -p.x + this.shadow.pos.x,\n                          y: p.y - this.shadow.pos.y,\n                      }\n                    : {\n                          x: p.x - this.shadow.pos.x,\n                          y: p.y - this.shadow.pos.y,\n                      };\n\n            g = Helper.GetRotatedPoint(g, { x: shadowTranslate, y: 100 }, angle);\n\n            polygon += g.x + 'px ' + g.y + 'px, ';\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n\n        const newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 10).toString(10)};\n            width: ${innerShadowSize}px;\n            height: ${rect.height * 2}px;\n            background: linear-gradient(${shadowDirection},\n                rgba(0, 0, 0, ${this.shadow.opacity}) 5%,\n                rgba(0, 0, 0, 0.05) 15%,\n                rgba(0, 0, 0, ${this.shadow.opacity}) 35%,\n                rgba(0, 0, 0, 0) 100%);\n            transform-origin: ${shadowTranslate}px 100px;\n            transform: translate3d(${shadowPos.x - shadowTranslate}px, ${\n            shadowPos.y - 100\n        }px, 0) rotate(${angle}rad);\n            clip-path: ${polygon};\n            -webkit-clip-path: ${polygon};\n        `;\n\n        this.innerShadow.style.cssText = newStyle;\n    }\n\n    /**\n     * Draw outer shadow to the soft page\n     */\n    private drawOuterShadow(): void {\n        const rect = this.getRect();\n\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n\n        const angle = this.shadow.angle + (3 * Math.PI) / 2;\n        const shadowTranslate = this.getDirection() === FlipDirection.BACK ? this.shadow.width : 0;\n\n        const shadowDirection =\n            this.getDirection() === FlipDirection.FORWARD ? 'to right' : 'to left';\n\n        const clip = [\n            { x: 0, y: 0 },\n            { x: rect.pageWidth, y: 0 },\n            { x: rect.pageWidth, y: rect.height },\n            { x: 0, y: rect.height },\n        ];\n\n        let polygon = 'polygon( ';\n        for (const p of clip) {\n            if (p !== null) {\n                let g =\n                    this.getDirection() === FlipDirection.BACK\n                        ? {\n                              x: -p.x + this.shadow.pos.x,\n                              y: p.y - this.shadow.pos.y,\n                          }\n                        : {\n                              x: p.x - this.shadow.pos.x,\n                              y: p.y - this.shadow.pos.y,\n                          };\n\n                g = Helper.GetRotatedPoint(g, { x: shadowTranslate, y: 100 }, angle);\n\n                polygon += g.x + 'px ' + g.y + 'px, ';\n            }\n        }\n\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n\n        const newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 10).toString(10)};\n            width: ${this.shadow.width}px;\n            height: ${rect.height * 2}px;\n            background: linear-gradient(${shadowDirection}, rgba(0, 0, 0, ${\n            this.shadow.opacity\n        }), rgba(0, 0, 0, 0));\n            transform-origin: ${shadowTranslate}px 100px;\n            transform: translate3d(${shadowPos.x - shadowTranslate}px, ${\n            shadowPos.y - 100\n        }px, 0) rotate(${angle}rad);\n            clip-path: ${polygon};\n            -webkit-clip-path: ${polygon};\n        `;\n\n        this.outerShadow.style.cssText = newStyle;\n    }\n\n    /**\n     * Draw left static page\n     */\n    private drawLeftPage(): void {\n        if (this.orientation === Orientation.PORTRAIT || this.leftPage === null) return;\n\n        if (\n            this.direction === FlipDirection.BACK &&\n            this.flippingPage !== null &&\n            this.flippingPage.getDrawingDensity() === PageDensity.HARD\n        ) {\n            (this.leftPage as HTMLPage).getElement().style.zIndex = (\n                this.getSettings().startZIndex + 5\n            ).toString(10);\n\n            this.leftPage.setHardDrawingAngle(180 + this.flippingPage.getHardAngle());\n            this.leftPage.draw(this.flippingPage.getDrawingDensity());\n        } else {\n            this.leftPage.simpleDraw(PageOrientation.LEFT);\n        }\n    }\n\n    /**\n     * Draw right static page\n     */\n    private drawRightPage(): void {\n        if (this.rightPage === null) return;\n\n        if (\n            this.direction === FlipDirection.FORWARD &&\n            this.flippingPage !== null &&\n            this.flippingPage.getDrawingDensity() === PageDensity.HARD\n        ) {\n            (this.rightPage as HTMLPage).getElement().style.zIndex = (\n                this.getSettings().startZIndex + 5\n            ).toString(10);\n\n            this.rightPage.setHardDrawingAngle(180 + this.flippingPage.getHardAngle());\n            this.rightPage.draw(this.flippingPage.getDrawingDensity());\n        } else {\n            this.rightPage.simpleDraw(PageOrientation.RIGHT);\n        }\n    }\n\n    /**\n     * Draw the next page at the time of flipping\n     */\n    private drawBottomPage(): void {\n        if (this.bottomPage === null) return;\n\n        const tempDensity =\n            this.flippingPage != null ? this.flippingPage.getDrawingDensity() : null;\n\n        if (!(this.orientation === Orientation.PORTRAIT && this.direction === FlipDirection.BACK)) {\n            (this.bottomPage as HTMLPage).getElement().style.zIndex = (\n                this.getSettings().startZIndex + 3\n            ).toString(10);\n\n            this.bottomPage.draw(tempDensity);\n        }\n    }\n\n    protected drawFrame(): void {\n        this.clear();\n\n        this.drawLeftPage();\n\n        this.drawRightPage();\n\n        this.drawBottomPage();\n\n        if (this.flippingPage != null) {\n            (this.flippingPage as HTMLPage).getElement().style.zIndex = (\n                this.getSettings().startZIndex + 5\n            ).toString(10);\n\n            this.flippingPage.draw();\n        }\n\n        if (this.shadow != null && this.flippingPage !== null) {\n            if (this.flippingPage.getDrawingDensity() === PageDensity.SOFT) {\n                this.drawOuterShadow();\n                this.drawInnerShadow();\n            } else {\n                this.drawHardOuterShadow();\n                this.drawHardInnerShadow();\n            }\n        }\n    }\n\n    private clear(): void {\n        for (const page of this.app.getPageCollection().getPages()) {\n            if (\n                page !== this.leftPage &&\n                page !== this.rightPage &&\n                page !== this.flippingPage &&\n                page !== this.bottomPage\n            ) {\n                (page as HTMLPage).getElement().style.cssText = 'display: none';\n            }\n\n            if (page.getTemporaryCopy() !== this.flippingPage) {\n                page.hideTemporaryCopy();\n            }\n        }\n    }\n\n    public update(): void {\n        super.update();\n\n        if (this.rightPage !== null) {\n            this.rightPage.setOrientation(PageOrientation.RIGHT);\n        }\n\n        if (this.leftPage !== null) {\n            this.leftPage.setOrientation(PageOrientation.LEFT);\n        }\n    }\n}\n","/**\n * Book size calculation type\n */\nexport const enum SizeType {\n    /** Dimensions are fixed */\n    FIXED = 'fixed',\n    /** Dimensions are calculated based on the parent element */\n    STRETCH = 'stretch',\n}\n\n/**\n * Configuration object\n */\nexport interface FlipSetting {\n    /** Page number from which to start viewing */\n    startPage: number;\n    /** Whether the book will be stretched under the parent element or not */\n    size: SizeType;\n\n    width: number;\n    height: number;\n\n    minWidth: number;\n    maxWidth: number;\n    minHeight: number;\n    maxHeight: number;\n\n    /** Draw shadows or not when page flipping */\n    drawShadow: boolean;\n    /** Flipping animation time */\n    flippingTime: number;\n\n    /** Enable switching to portrait mode */\n    usePortrait: boolean;\n    /** Initial value to z-index */\n    startZIndex: number;\n    /** If this value is true, the parent element will be equal to the size of the book */\n    autoSize: boolean;\n    /** Shadow intensity (1: max intensity, 0: hidden shadows) */\n    maxShadowOpacity: number;\n\n    /** If this value is true, the first and the last pages will be marked as hard and will be shown in single page mode */\n    showCover: boolean;\n    /** Disable content scrolling when touching a book on mobile devices */\n    mobileScrollSupport: boolean;\n\n    /** Set the forward event of clicking on child elements (buttons, links) */\n    clickEventForward: boolean;\n\n    /** Using mouse and touch events to page flipping */\n    useMouseEvents: boolean;\n\n    swipeDistance: number;\n\n    /** if this value is true, fold the corners of the book when the mouse pointer is over them. */\n    showPageCorners: boolean;\n\n    /** if this value is true, flipping by clicking on the whole book will be locked. Only on corners */\n    disableFlipByClick: boolean;\n}\n\nexport class Settings {\n    private _default: FlipSetting = {\n        startPage: 0,\n        size: SizeType.FIXED,\n        width: 0,\n        height: 0,\n        minWidth: 0,\n        maxWidth: 0,\n        minHeight: 0,\n        maxHeight: 0,\n        drawShadow: true,\n        flippingTime: 1000,\n        usePortrait: true,\n        startZIndex: 0,\n        autoSize: true,\n        maxShadowOpacity: 1,\n        showCover: false,\n        mobileScrollSupport: true,\n        swipeDistance: 30,\n        clickEventForward: true,\n        useMouseEvents: true,\n        showPageCorners: true,\n        disableFlipByClick: false,\n    };\n\n    /**\n     * Processing parameters received from the user. Substitution default values\n     *\n     * @param userSetting\n     * @returns {FlipSetting} Ð¡onfiguration object\n     */\n    public getSettings(userSetting: Record<string, number | string | boolean>): FlipSetting {\n        const result = this._default;\n        Object.assign(result, userSetting);\n\n        if (result.size !== SizeType.STRETCH && result.size !== SizeType.FIXED)\n            throw new Error('Invalid size type. Available only \"fixed\" and \"stretch\" value');\n\n        if (result.width <= 0 || result.height <= 0) throw new Error('Invalid width or height');\n\n        if (result.flippingTime <= 0) throw new Error('Invalid flipping time');\n\n        if (result.size === SizeType.STRETCH) {\n            if (result.minWidth <= 0) result.minWidth = 100;\n\n            if (result.maxWidth < result.minWidth) result.maxWidth = 2000;\n\n            if (result.minHeight <= 0) result.minHeight = 100;\n\n            if (result.maxHeight < result.minHeight) result.maxHeight = 2000;\n        } else {\n            result.minWidth = result.width;\n            result.maxWidth = result.width;\n            result.minHeight = result.height;\n            result.maxHeight = result.height;\n        }\n\n        return result;\n    }\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { PageCollection } from './Collection/PageCollection';\nimport { ImagePageCollection } from './Collection/ImagePageCollection';\nimport { HTMLPageCollection } from './Collection/HTMLPageCollection';\nimport { PageRect, Point } from './BasicTypes';\nimport { Flip, FlipCorner, FlippingState } from './Flip/Flip';\nimport { Orientation, Render } from './Render/Render';\nimport { CanvasRender } from './Render/CanvasRender';\nimport { HTMLUI } from './UI/HTMLUI';\nimport { CanvasUI } from './UI/CanvasUI';\nimport { Helper } from './Helper';\nimport { Page } from './Page/Page';\nimport { EventObject } from './Event/EventObject';\nimport { HTMLRender } from './Render/HTMLRender';\nimport { FlipSetting, Settings } from './Settings';\nimport { UI } from './UI/UI';\n\nimport './Style/stPageFlip.css';\n\n/**\n * Class representing a main PageFlip object\n *\n * @extends EventObject\n */\nexport class PageFlip extends EventObject {\n    private mousePosition: Point;\n    private isUserTouch = false;\n    private isUserMove = false;\n\n    private readonly setting: FlipSetting = null;\n    private readonly block: HTMLElement; // Root HTML Element\n\n    private pages: PageCollection = null;\n    private flipController: Flip;\n    private render: Render;\n\n    private ui: UI;\n\n    /**\n     * Create a new PageFlip instance\n     *\n     * @constructor\n     * @param {HTMLElement} inBlock - Root HTML Element\n     * @param {Object} setting - Configuration object\n     */\n    constructor(inBlock: HTMLElement, setting: Partial<FlipSetting>) {\n        super();\n\n        this.setting = new Settings().getSettings(setting);\n        this.block = inBlock;\n    }\n\n    /**\n     * Destructor. Remove a root HTML element and all event handlers\n     */\n    public destroy(): void {\n        this.ui.destroy();\n        this.block.remove();\n    }\n\n    /**\n     * Update the render area. Re-show current page.\n     */\n    public update(): void {\n        this.render.update();\n        this.pages.show();\n    }\n\n    /**\n     * Load pages from images on the Canvas mode\n     *\n     * @param {string[]} imagesHref - List of paths to images\n     */\n    public loadFromImages(imagesHref: string[]): void {\n        this.ui = new CanvasUI(this.block, this, this.setting);\n\n        const canvas = (this.ui as CanvasUI).getCanvas();\n        this.render = new CanvasRender(this, this.setting, canvas);\n\n        this.flipController = new Flip(this.render, this);\n\n        this.pages = new ImagePageCollection(this, this.render, imagesHref);\n        this.pages.load();\n\n        this.render.start();\n\n        this.pages.show(this.setting.startPage);\n\n        // safari fix\n        setTimeout(() => {\n            this.ui.update();\n            this.trigger('init', this, {\n                page: this.setting.startPage,\n                mode: this.render.getOrientation(),\n            });\n        }, 1);\n    }\n\n    /**\n     * Load pages from HTML elements on the HTML mode\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    public loadFromHTML(items: NodeListOf<HTMLElement> | HTMLElement[]): void {\n        this.ui = new HTMLUI(this.block, this, this.setting, items);\n\n        this.render = new HTMLRender(this, this.setting, this.ui.getDistElement());\n\n        this.flipController = new Flip(this.render, this);\n\n        this.pages = new HTMLPageCollection(this, this.render, this.ui.getDistElement(), items);\n        this.pages.load();\n\n        this.render.start();\n\n        this.pages.show(this.setting.startPage);\n\n        // safari fix\n        setTimeout(() => {\n            this.ui.update();\n            this.trigger('init', this, {\n                page: this.setting.startPage,\n                mode: this.render.getOrientation(),\n            });\n        }, 1);\n    }\n\n    /**\n     * Update current pages from images\n     *\n     * @param {string[]} imagesHref - List of paths to images\n     */\n    public updateFromImages(imagesHref: string[]): void {\n        const current = this.pages.getCurrentPageIndex();\n\n        this.pages.destroy();\n        this.pages = new ImagePageCollection(this, this.render, imagesHref);\n        this.pages.load();\n\n        this.pages.show(current);\n        this.trigger('update', this, {\n            page: current,\n            mode: this.render.getOrientation(),\n        });\n    }\n\n    /**\n     * Update current pages from HTML\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    public updateFromHtml(items: NodeListOf<HTMLElement> | HTMLElement[]): void {\n        const current = this.pages.getCurrentPageIndex();\n\n        this.pages.destroy();\n        this.pages = new HTMLPageCollection(this, this.render, this.ui.getDistElement(), items);\n        this.pages.load();\n        (this.ui as HTMLUI).updateItems(items);\n        this.render.reload();\n\n        this.pages.show(current);\n        this.trigger('update', this, {\n            page: current,\n            mode: this.render.getOrientation(),\n        });\n    }\n\n    /**\n     * Clear pages from HTML (remove to initinalState)\n     */\n    public clear(): void {\n        this.pages.destroy();\n        (this.ui as HTMLUI).clear();\n    }\n\n    /**\n     * Turn to the previous page (without animation)\n     */\n    public turnToPrevPage(): void {\n        this.pages.showPrev();\n    }\n\n    /**\n     * Turn to the next page (without animation)\n     */\n    public turnToNextPage(): void {\n        this.pages.showNext();\n    }\n\n    /**\n     * Turn to the specified page number (without animation)\n     *\n     * @param {number} page - New page number\n     */\n    public turnToPage(page: number): void {\n        this.pages.show(page);\n    }\n\n    /**\n     * Turn to the next page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    public flipNext(corner: FlipCorner = FlipCorner.TOP): void {\n        this.flipController.flipNext(corner);\n    }\n\n    /**\n     * Turn to the prev page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    public flipPrev(corner: FlipCorner = FlipCorner.TOP): void {\n        this.flipController.flipPrev(corner);\n    }\n\n    /**\n     * Turn to the specified page number (with animation)\n     *\n     * @param {number} page - New page number\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    public flip(page: number, corner: FlipCorner = FlipCorner.TOP): void {\n        this.flipController.flipToPage(page, corner);\n    }\n\n    /**\n     * Call a state change event trigger\n     *\n     * @param {FlippingState} newState - New  state of the object\n     */\n    public updateState(newState: FlippingState): void {\n        this.trigger('changeState', this, newState);\n    }\n\n    /**\n     * Call a page number change event trigger\n     *\n     * @param {number} newPage - New page Number\n     */\n    public updatePageIndex(newPage: number): void {\n        this.trigger('flip', this, newPage);\n    }\n\n    /**\n     * Call a page orientation change event trigger. Update UI and rendering area\n     *\n     * @param {Orientation} newOrientation - New page orientation (portrait, landscape)\n     */\n    public updateOrientation(newOrientation: Orientation): void {\n        this.ui.setOrientationStyle(newOrientation);\n        this.update();\n        this.trigger('changeOrientation', this, newOrientation);\n    }\n\n    /**\n     * Get the total number of pages in a book\n     *\n     * @returns {number}\n     */\n    public getPageCount(): number {\n        return this.pages.getPageCount();\n    }\n\n    /**\n     * Get the index of the current page in the page list (starts at 0)\n     *\n     * @returns {number}\n     */\n    public getCurrentPageIndex(): number {\n        return this.pages.getCurrentPageIndex();\n    }\n\n    /**\n     * Get page from collection by number\n     *\n     * @param {number} pageIndex\n     * @returns {Page}\n     */\n    public getPage(pageIndex: number): Page {\n        return this.pages.getPage(pageIndex);\n    }\n\n    /**\n     * Get the current rendering object\n     *\n     * @returns {Render}\n     */\n    public getRender(): Render {\n        return this.render;\n    }\n\n    /**\n     * Get current object responsible for flipping\n     *\n     * @returns {Flip}\n     */\n    public getFlipController(): Flip {\n        return this.flipController;\n    }\n\n    /**\n     * Get current page orientation\n     *\n     * @returns {Orientation} Ð¡urrent orientation: portrait or landscape\n     */\n    public getOrientation(): Orientation {\n        return this.render.getOrientation();\n    }\n\n    /**\n     * Get current book sizes and position\n     *\n     * @returns {PageRect}\n     */\n    public getBoundsRect(): PageRect {\n        return this.render.getRect();\n    }\n\n    /**\n     * Get configuration object\n     *\n     * @returns {FlipSetting}\n     */\n    public getSettings(): FlipSetting {\n        return this.setting;\n    }\n\n    /**\n     * Get UI object\n     *\n     * @returns {UI}\n     */\n    public getUI(): UI {\n        return this.ui;\n    }\n\n    /**\n     * Get current flipping state\n     *\n     * @returns {FlippingState}\n     */\n    public getState(): FlippingState {\n        return this.flipController.getState();\n    }\n\n    /**\n     * Get page collection\n     *\n     * @returns {PageCollection}\n     */\n    public getPageCollection(): PageCollection {\n        return this.pages;\n    }\n\n    /**\n     * Start page turning. Called when a user clicks or touches\n     *\n     * @param {Point} pos - Touch position in coordinates relative to the book\n     */\n    public startUserTouch(pos: Point): void {\n        this.mousePosition = pos; // Save touch position\n        this.isUserTouch = true;\n        this.isUserMove = false;\n    }\n\n    /**\n     * Called when a finger / mouse moves\n     *\n     * @param {Point} pos - Touch position in coordinates relative to the book\n     * @param {boolean} isTouch - True if there was a touch event, not a mouse click\n     */\n    public userMove(pos: Point, isTouch: boolean): void {\n        if (!this.isUserTouch && !isTouch && this.setting.showPageCorners) {\n            this.flipController.showCorner(pos); // fold Page Corner\n        } else if (this.isUserTouch) {\n            if (Helper.GetDistanceBetweenTwoPoint(this.mousePosition, pos) > 5) {\n                this.isUserMove = true;\n                this.flipController.fold(pos);\n            }\n        }\n    }\n\n    /**\n     * Ð¡alled when the user has stopped touching\n     *\n     * @param {Point} pos - Touch end position in coordinates relative to the book\n     * @param {boolean} isSwipe - true if there was a mobile swipe event\n     */\n    public userStop(pos: Point, isSwipe = false): void {\n        if (this.isUserTouch) {\n            this.isUserTouch = false;\n\n            if (!isSwipe) {\n                if (!this.isUserMove) this.flipController.flip(pos);\n                else this.flipController.stopMove();\n            }\n        }\n    }\n}\n","/* eslint-disable prettier/prettier */\nimport React, {\n    ReactElement,\n    useCallback,\n    useEffect,\n    useImperativeHandle,\n    useRef,\n    useState,\n} from 'react';\nimport { PageFlip } from '../vendor/page-flip/PageFlip';\nimport { FlipSetting } from '../vendor/page-flip/Settings';\n\n\nimport { IFlipSetting, IEventProps } from './settings';\n\ninterface IProps extends IFlipSetting, IEventProps {\n    className: string;\n    style: React.CSSProperties;\n    children: React.ReactNode;\n    renderOnlyPageLengthChange?: boolean;\n}\n\nconst HTMLFlipBookForward = React.forwardRef(\n    (props: IProps, ref: React.MutableRefObject<PageFlip>) => {\n        const htmlElementRef = useRef<HTMLDivElement>(null);\n        const childRef = useRef<HTMLElement[]>([]);\n        const pageFlip = useRef<PageFlip>();\n\n        const [pages, setPages] = useState<ReactElement[]>([]);\n\n        useImperativeHandle(ref, () => ({\n            pageFlip: () => pageFlip.current,\n        }));\n\n        const refreshOnPageDelete = useCallback(() => {\n            if (pageFlip.current) {\n                pageFlip.current.clear();\n            }\n        }, []);\n\n        const removeHandlers = useCallback(() => {\n            const flip = pageFlip.current;\n\n            if (flip) {\n                flip.off('flip');\n                flip.off('changeOrientation');\n                flip.off('changeState');\n                flip.off('init');\n                flip.off('update');\n            }\n        }, []);\n\n        useEffect(() => {\n            childRef.current = [];\n\n            if (props.children) {\n                const childList = React.Children.map(props.children, (child) => {\n                    return React.cloneElement(child as ReactElement, {\n                        ref: (dom) => {\n                            if (dom) {\n                                childRef.current.push(dom);\n                            }\n                        },\n                    });\n                });\n\n                if (!props.renderOnlyPageLengthChange || pages.length !== childList.length) {\n                    if (childList.length < pages.length) {\n                        refreshOnPageDelete();\n                    }\n\n                    setPages(childList);\n                }\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [props.children]);\n\n        useEffect(() => {\n            const setHandlers = () => {\n                const flip = pageFlip.current;\n\n                if (flip) {\n                    if (props.onFlip) {\n                        flip.on('flip', (e: unknown) => props.onFlip(e));\n                    }\n\n                    if (props.onChangeOrientation) {\n                        flip.on('changeOrientation', (e: unknown) => props.onChangeOrientation(e));\n                    }\n\n                    if (props.onChangeState) {\n                        flip.on('changeState', (e: unknown) => props.onChangeState(e));\n                    }\n\n                    if (props.onInit) {\n                        flip.on('init', (e: unknown) => props.onInit(e));\n                    }\n\n                    if (props.onUpdate) {\n                        flip.on('update', (e: unknown) => props.onUpdate(e));\n                    }\n                }\n            };\n\n            if (pages.length > 0 && childRef.current.length > 0) {\n                removeHandlers();\n\n                if (htmlElementRef.current && !pageFlip.current) {\n                    pageFlip.current = new PageFlip(htmlElementRef.current, props as Partial<FlipSetting>);\n                }\n\n                if (!pageFlip.current.getFlipController()) {\n                    pageFlip.current.loadFromHTML(childRef.current);\n                } else {\n                    pageFlip.current.updateFromHtml(childRef.current);\n                }\n\n                setHandlers();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [pages]);\n\n        return (\n            <div ref={htmlElementRef} className={props.className} style={props.style}>\n                {pages}\n            </div>\n        );\n    }\n);\n\nexport const HTMLFlipBook = React.memo(HTMLFlipBookForward);\n"],"names":[],"mappings":"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"}